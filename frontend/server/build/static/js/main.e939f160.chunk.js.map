{"version":3,"sources":["img/background3.jpg","pages/Home.js","components/Navigation.js","components/Footer.js","lib/queries.js","pages/Login.js","pages/Join/JoinForm.js","pages/Join/index.js","components/Counter.js","pages/SellerPage/Request/Request.js","pages/SellerPage/Request/SortButton.js","pages/SellerPage/Request/RequestList.js","pages/SellerPage/Request/SearchBar.js","pages/SellerPage/Request/CategoryMenu.js","pages/SellerPage/Request/RequestMain.js","pages/SellerPage/Bidding/Bidding.js","pages/SellerPage/Bidding/index.js","components/RequestCard.js","pages/SellerPage/Request/RequestDetail.js","pages/SellerPage/SellerHome.js","components/chat/ChatList.js","components/chat/ChatBox.js","components/chat/Main.js","components/chat/index.js","pages/SellerPage/MyPage/BidList.js","components/Profile/ProfileCarousel.js","components/Profile/ProfileEdit.js","components/Profile/Profile.js","components/Profile/ProfileModal.js","pages/SellerPage/MyPage/Mypage.js","pages/SellerPage/MyPage/index.js","pages/SellerPage/index.js","pages/SellerPage/Main.js","pages/UserPage/Enroll/EnrollList.js","pages/UserPage/Enroll/EnrollDialog.js","pages/UserPage/Enroll/EnrollAlert.js","pages/UserPage/Enroll/ConfirmDialog.js","pages/UserPage/Enroll/EnrollStepper.js","pages/UserPage/Enroll/Enroll.js","pages/UserPage/Enroll/index.js","pages/ExpertRegister/ExpertRegister.js","pages/UserPage/UserHome.js","pages/UserPage/MyPage/MyRequest/MyRequests.js","pages/UserPage/MyPage/MyRequest/RequestHistory.js","pages/UserPage/MyPage/MyRequest/index.js","pages/UserPage/MyPage/MyRequest/Main.js","components/UserCommuButton/PopOver.js","components/UserCommuButton/PhoneNumber.js","components/UserCommuButton/index.js","components/UserCommuButton/CommunicateButton.js","components/BidCard.js","pages/UserPage/MyPage/MyRequest/NowTrading.js","pages/UserPage/MyPage/MyRequest/Bids.js","pages/UserPage/MyPage/MyRequest/ReceiveList.js","pages/UserPage/MyPage/MyRequest/TradeCompelete.js","pages/UserPage/MyPage/MyRequest/CanceledTrade.js","pages/UserPage/MyPage/MyRequest/RequestDetail.js","pages/UserPage/MyPage/Mypage.js","pages/UserPage/MyPage/index.js","pages/UserPage/index.js","pages/UserPage/Main.js","App.js","modules/userAction.js","modules/index.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","heroContent","padding","spacing","containerStyle","backgroundColor","buttonStyle","float","marginTop","marginRight","Home","classes","useHistory","Container","Grid","container","className","item","xs","Typography","variant","color","gutterBottom","paragraph","Divider","root","title","flexGrow","display","fontSize","paddingLeft","navStyle","paddingTop","menuStyle","textDecoration","transition","Navigation","is_login","useSelector","state","userAction","is_seller","history","dispatch","useDispatch","logout","localStorage","clear","type","push","alert","Toolbar","console","log","to","onClick","Copyright","align","Link","href","Date","getFullYear","footer","Footer","component","gql","GET_ALL_REQUESTS","GET_MY_BIDS","GET_MY_REQUESTS","GET_BIDS_IN_REQUEST","GET_MY_ROOM","GET_MY_PROFILE","GET_MY_PROFILE_IMAGE","SEND_REQUEST","SEND_BID","LOGIN","SIGNUP","SEND_NEW_MESSAGE","CHOICE_ONE_BID","TRADE_COMPLETE","TRADE_CANCLE","REQUEST_TIME_OVER","EDIT_MY_PROFILE","EXPERT_REGISTER","START_CHAT","paper","flexDirection","alignItems","avatar","margin","palette","secondary","main","form","width","submit","Login","useMutation","login","data","useState","email","pwd","user","setUser","useEffect","_id","payload","user_id","userName","name","setItem","result","onChangeInput","e","target","value","maxWidth","Avatar","noValidate","onSubmit","preventDefault","variables","TextField","fullWidth","id","label","autoComplete","autoFocus","onChange","Button","RLink","JoinForm","signUp","userInfo","setInfo","onChangeInfo","input","required","justify","Counter","parseInt","getTime","start","setStart","deadLine","end","request","timeOver","interval","clearInterval","setInterval","hour","minutes","seconds","card","height","cardMedia","cardContent","gridStyle","titleStyle","tagStyle","borderRadius","cursor","detailStyle","overflow","tagDivStyle","textOverflow","whiteSpace","Request","checked","tags","setTags","showTagList","map","obj","index","key","Grow","in","timeout","Paper","elevation","Card","CardContent","pathname","requestedAt","author","category","detail","SortButton","anchorEl","setAnchorEl","sortValue","setSortValue","open","Boolean","onClickSort","style","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","primary","cardGrid","paddingBottom","loadingStyle","RequestList","useQuery","fetchPolicy","loading","error","tagSort","Chip","size","onDelete","onClickRemove","list","filter","x","useLazyQuery","CircularProgress","requestList","getAllRequests","marginLeft","flex","iconButton","SearchBar","IconButton","aria-label","InputBase","CategoryMenu","setCategory","categoryList","useStyle","RequestMain","backdrop","zIndex","drawer","Bidding","setOpen","price","setPrice","sendBid","data_result","onSubmitForm","handleClose","Backdrop","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Number","toLocaleString","DialogActions","rootStyle","RequestCard","onClickChecked","CardHeader","textAlign","subheader","dense","icon","text","obj2","hopeDate","obj3","index3","secondaryTypographyProps","primaryTypographyProps","RequestDetail","props","location","setChecked","Fade","divStyle","backgroundImage","Background","linkStyle","SellerHome","Zoom","myTextStyle","border","wordBreak","otherTextStyle","systemStyle","ChatList","message","paddingRight","Fragment","createdAt","ListItemAvatar","alt","src","background","marginBottom","inline","myChat","overflowY","overflowX","inputStyle","ChatBox","setMessage","newMessages","setNewMessage","useSubscription","room","objDiv","useRef","sendNewMessage","current","scrollTop","scrollHeight","newMessage","lastMessageList","messages","i","newMessageList","ref","onKeyDown","keyCode","shiftKey","OutlinedInput","va","rowsMax","multiline","endAdornment","InputAdornment","position","Main","seller","getRoom","called","getMyRoom","BidList","chatOpen","setChatOpen","handleChatClose","BidHistory","getMyBids","TableRow","TableCell","scope","ChosenList","MyChosenList","Collapse","collapsedHeight","action","length","TableContainer","Table","TableHead","TableBody","ProfileCarousel","onStart","flexWrap","justifyContent","gridList","transform","light","blue","avatarBig","titleBar","ProfileEdit","profile","profileClose","imageOpen","setImageOpen","image","setImage","onClickImageOpen","profileImage","setProfileImage","profilePreview","setProfilePreview","exampleImages","setExampleImages","examplePreview","setExamplePreview","exPreview","setExPreview","setText","phone","setPhone","phone1","phone2","phone3","phoneInput","setPhoneInput","savaProfile","onChangePhone","onClickAxios","a","formData","FormData","config","header","append","Axios","post","then","res","catch","err","showExamplePreview","GridListTile","GridListTileBar","titlePosition","actionIcon","onClickDeleteImage","actionPosition","showExPreview","ex","editMyProfile","htmlFor","files","reader","FileReader","onload","readAsDataURL","accept","filesLength","imageRead","multiple","GridList","cols","defaultValue","Profile","editOpen","setEditOpen","reviewList","reviews","Rating","rating","precision","readOnly","InputProps","ProfileModal","getProfile","getMyProfile","avatarStyle","MyPage","getItem","React","exact","path","rootList","backgroundStyle","categories","deadLines","EnrollList","stepIndex","handleEnrollData","categoryIndex","categoryInput","setCategoryInput","deadLineIndex","deadLineInput","setDeadLineInput","hopeDateIndex","hopeDateInput","setHopeDateInput","onChangeHopeDate","tag","setTag","tagList","setTagList","setDetail","printList","arr","fnc","Slide","direction","mountOnEnter","unmountOnExit","selected","ListItemIcon","Checkbox","now","str","slice","setHours","getHours","toDateString","textField","InputLabelProps","shrink","placeholder","rows","Tooltip","arrow","AlertDialog","onClickSendRequest","aria-describedby","Alert","CustomizedSnackbars","reason","Snackbar","autoHideDuration","severity","Transition","forwardRef","AlertDialogSlide","handleNext","TransitionComponent","keepMounted","backButton","instructions","EnrollStepper","activeStep","setActiveStep","steps","sendRequest","prevActiveStep","enrollData","setEnrollData","alertOpen","setAlertOpen","confirmOpen","setConfirmOpen","onClickCheck","Stepper","alternativeLabel","Step","StepLabel","disabled","ConfirmDialog","Enroll","actionsContainer","resetContainer","ExpertRegister","register","onChangeText","onChnageProfileImage","onChangeImage","expertRegister","handleBack","orientation","StepContent","step","getStepContent","square","UserHome","cardStyle","MyRequests","MyRequestList","RequestHistory","requestHistory","getMyRequests","PopOver","setNumberOpen","PhoneNumber","CommunicateButton","request_id","seller_id","numberOpen","maxHeight","cardHead","fontFamily","fontWeight","large","scorllStyle","BidCard","requestData","onClickChoice","setUser_id","handleClickOpen","UserCommuButton","NowTrading","tradeCancle","cancle","bid","tradeComplete","complete","replace","Bids","bids","counterStyle","ReceiveList","bidData","TradeCompelete","endIcon","CanceledTrade","choiceOneBid","data2","data1","getBidsInRequest","bid_id","MyRequest","App","Seller","User","Join","initailState","login_reducer","rootReducer","combineReducers","wsLink","WebSocketLink","uri","options","reconnect","httpLink","HttpLink","link","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","store","createStore","document","querySelector","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e939f160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background3.135cc039.jpg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { Divider } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n\n    },\n    containerStyle: {\n        backgroundColor: 'white',\n        padding: theme.spacing(3, 3, 3),\n    },\n    buttonStyle: {\n        float: 'right',\n        marginTop: '8px',\n        marginRight: '50px',\n    }\n}));\n\n\nconst Home = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <Container>\n            <Grid container className={classes.heroContent}>\n                <Grid item xs={8}>\n                    <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                        Try it!\n                    </Typography>\n                    <Typography variant=\"h3\" color=\"textSecondary\" paragraph>\n                        when you want to have own website,<br />\n                        here is best solution.\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Container className={classes.containerStyle}>\n                <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                    Hello World!\n                </Typography>\n                <Divider />\n                <Typography variant=\"h5\" color=\"textSecondary\" paragraph>\n                    when you want to have own website,<br />\n                        here is best solution.\n                        asdfkajsdklfajsdlkfjas;dlkfajsd;lkfjasdflkajsd;fkajsd;lakjsd;f\n                        lkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfja\n                        sdflkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfja\n                        sdflkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjas\n                        dflkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjas\n                        dflkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjasdf\n                        lkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjasdf\n                        lkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjas\n                        dflkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadfsdfkajsdklfajsdlkfjas;dlkfajsd;lkfjasd\n                        flkajsd;fkajsd;lakjsd;flkajsdkjfahsdhjfgasdkjhfgadskjhfgakdjhsfgakshjdfg\n                        askdfhalskjdfhalksjdfhalfkjsh\n                        askfdjhslakdfjhalsdkjfhalskdjfh\n                        asdfasdfasdfasdfasdfasdfadf\n                </Typography>\n            </Container>\n            <h1>shit</h1>\n        </Container>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Divider, Container, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '10px',\n    },\n    title: {\n        flexGrow: 1,\n        display: 'inline-block',\n        fontSize: '30px',\n        paddingLeft: '10px',\n        color : 'rgb(104,104,106)',\n    },\n    navStyle: {\n        paddingTop : '5px',\n        display: 'inline-block',\n        float: 'right',\n    },\n    menuStyle: {\n        textDecoration: 'none',\n        color : 'rgb(104,104,106)',\n        padding : '10px',\n        transition : 'all 0.1s',\n        '&:hover':{\n            backgroundColor : '#F2F3F4',\n        }\n    },\n}));\n\n\n\n\nfunction Navigation() {\n\n    const classes = useStyles();\n    const is_login = useSelector(state => state.userAction.is_login);\n    const is_seller = useSelector(state => state.userAction.is_seller);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const logout = () => {\n        localStorage.clear();\n        dispatch({ type: 'LOGOUT' })\n        history.push('/');\n        alert('로그아웃');\n    }\n    const loginMenu = () => {\n        console.log('is_seller',is_seller);\n        if (is_login) {\n            if (is_seller) {\n                return (\n                    <Typography>\n                        <Link className={classes.menuStyle} to='/seller'>HOME</Link>\n                        <Link className={classes.menuStyle} to='/user/enroll'>ENROLL</Link>\n                        <Link className={classes.menuStyle} to='/seller/request'>LIST</Link>\n                        <Link className={classes.menuStyle} to='/seller/mypage'>MYPAGE</Link>\n                        <Link className={classes.menuStyle} to='#' onClick={logout}>LOGOUT</Link>\n                    </Typography>\n                )\n            } else {\n                return (\n                    <Typography>\n                        <Link className={classes.menuStyle} to='/user'>HOME</Link>\n                        <Link className={classes.menuStyle} to='/user/enroll'>ENROLL</Link>\n                        <Link className={classes.menuStyle} to='/user/mypage'>MYPAGE</Link>\n                        <Link className={classes.menuStyle} to='#' onClick={logout}>LOGOUT</Link>\n                    </Typography> \n                )\n            }\n        } else {\n            return (\n                <Typography>\n                    <Link className={classes.menuStyle} to='/'>HOME</Link>\n                    <Link className={classes.menuStyle} to='/login'>LOGIN</Link>\n                    <Link className={classes.menuStyle} to='/join'>JOIN</Link>\n                </Typography>\n            )\n        }\n    }\n\n    return (\n        <Container className={classes.root}>\n            <Toolbar>\n                <Typography className={classes.title}>\n                    HELL\n                </Typography>\n                <div className={classes.navStyle}>\n                    {loginMenu()}\n                </div>\n            </Toolbar>\n        </Container>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Footer(){\n\n    const classes = useStyles();\n\n    return(\n        <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                Footer\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Something here to give the footer a purpose!\n            </Typography>\n            <Copyright />\n        </footer>\n    )\n}","import { gql } from '@apollo/client';\n\n//######################### Query #########################\n\nexport const GET_ALL_USERS = gql`\nquery GetAllUsers{\n  getAllUsers{\n    _id\n    name\n    email\n  }\n}\n`\n\nexport const GET_USER = gql`\nquery GetOneUser($email:String!) {\n  getUser(email:$email){\n    _id\n    name\n    email\n  }\n}\n`\n\nexport const GET_ALL_REQUESTS = gql`\nquery GetAllRequests{\n  getAllRequests{\n    _id\n    author {\n      _id\n      name\n    }\n    detail\n    category\n    requestedAt\n    deadLine\n    hopeDate\n    state\n    tags\n  }\n}\n`\n\nexport const GET_MY_BIDS = gql`\nquery GetMyBids($author:ID!){\n  getMyBids(author:$author){\n    request{\n      _id\n      author{\n        _id\n        name\n        email\n      }\n      detail\n      category\n      deadLine\n      hopeDate\n      tags\n      requestedAt\n      state\n    }\n    state\n  }\n}\n`\n\nexport const GET_MY_ROOM_FOR_SELLER = gql`\nquery getMyRoomForSeller($seller:ID){\n  getMyRoomForSeller(seller:$seller){\n    _id\n    messages{\n      name\n      message\n      createdAt\n    }\n  }\n}\n`\n\nexport const GET_MY_REQUESTS = gql`\nquery GetMyRequests($author:ID!){\n  getMyRequests(author:$author){\n    _id\n    author{\n      name\n    }\n    detail\n    category\n    requestedAt\n    deadLine\n    hopeDate\n    state\n    tags\n  }\n}\n`\n\nexport const GET_BIDS_IN_REQUEST = gql`\nquery GetBidsInRequest($request:ID){\n  getBidsInRequest(request:$request){\n    _id\n    author{\n      _id\n      name\n      profile{\n        phone\n        profileImage\n      }\n    }\n    price\n    state\n  }\n}\n`\n\nexport const GET_MY_ROOM = gql`\nquery GetMyRoom($request:ID,$seller:ID){\n  getMyRoom(request:$request,seller:$seller){\n    _id\n    messages{\n      name\n      message\n      createdAt\n    }\n  }\n}\n`\n\nexport const GET_MY_PROFILE = gql`\nquery GetMyProfile($user:ID){\n  getMyProfile(user:$user){\n    user{\n      name\n      email\n    }\n    phone\n    profileImage\n    exampleImages\n    text\n    reviews{\n      name\n      text\n      rating\n    }\n  }\n}\n`\n\nexport const GET_MY_PROFILE_IMAGE = gql`\nquery GetMyProfile($user:ID){\n  getMyProfile(user:$user){\n    profileImage\n  }\n}\n`\n\n // ######################### Mutation #########################\n\nexport const SEND_REQUEST = gql`\nmutation SendRequest($input:RequestInput){\n  sendRequest(input:$input)\n}\n`\n\n\n\nexport const SEND_BID = gql`\nmutation SendBid($input:BidInput){\n  sendBid(\n    input:$input\n  )\n}\n`\n\nexport const LOGIN = gql`\nmutation Login($email:String!,$pwd:String!){\n  login(email:$email,pwd:$pwd){\n    _id\n    name\n    is_seller\n    result\n  }\n}\n`\n\nexport const SIGNUP = gql`\nmutation SignUp($input:UserInput!){\n  signUp(input:$input)\n}\n`\n\nexport const SEND_NEW_MESSAGE = gql`\nmutation SendNewMessage($input:MessageInput){\n  sendNewMessage(input:$input){\n    name\n    message\n    createdAt\n  }\n}\n`\n\nexport const CHOICE_ONE_BID = gql`\nmutation ChoiceOneBid($bid:ID,$request:ID){\n  choiceOneBid(bid:$bid,request:$request)\n}\n`\n\nexport const TRADE_COMPLETE = gql`\nmutation TradeComplete($bid:ID,$request:ID){\n  tradeComplete(bid:$bid,request:$request)\n}\n`\n\nexport const TRADE_CANCLE = gql`\nmutation TradeCancle($request:ID){\n  tradeCancle(request:$request)\n}\n`\n\nexport const BID_CANCLE = gql`\nmutation BidCancle($request:ID,$author:ID){\n  bidCancle(request:$request,author:$author)\n}\n`\n\nexport const REQUEST_TIME_OVER = gql`\nmutation RequestTimeOver($request:ID){\n  requestTimeOver(request:$request)\n}\n`\n\nexport const EDIT_MY_PROFILE = gql`\nmutation EditMyProfile($input:ProfileInput){\n  editMyProfile(input:$input)\n}\n`\n\nexport const EXPERT_REGISTER = gql`\nmutation ExpertRegister($user:UserInput,$profile:ProfileInput){\n  expertRegister(user:$user,profile:$profile)\n}\n`\n\n//######################### Subscription #########################\n\nexport const START_CHAT = gql`\nsubscription NewMessage($room:ID){\n  newMessage(room:$room){\n    name\n    message\n    createdAt\n  }\n}\n`\n\n","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RLink, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from '../lib/queries';\nimport Axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n\n  const classes = useStyles();\n  const history = useHistory();\n  const is_login = useSelector(state => state.userAction.is_login);\n  const is_seller = useSelector(state => state.userAction.is_seller);\n  const dispatch = useDispatch();\n  const [login, { data }] = useMutation(LOGIN);\n  const [user, setUser] = useState({\n    email: '',\n    pwd: '',\n  })\n\n  useEffect(() => {\n    if (is_login) {\n      if(is_seller){\n        history.push('/seller');\n      } else {\n        history.push('/user');\n      }\n    }\n    if (data) {\n      if (data.login._id) {\n        dispatch({ type: 'LOGIN', payload: { user_id: data.login._id, is_seller: data.login.is_seller, userName: data.login.name } });\n        localStorage.setItem('is_login', true);\n        localStorage.setItem('is_seller', data.login.is_seller);\n        localStorage.setItem('user_id', data.login._id);\n        localStorage.setItem('userName', data.login.name);\n        console.log(data.login.result);\n        if(data.login.is_seller){\n          history.push('/seller');\n        } else {\n          history.push('/user');\n        }\n      } else {\n        alert(data.login.result);\n      }\n    }\n  }, [history, is_login,is_seller, data, dispatch])\n\n  const onChangeInput = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    login({\n      variables: {\n        ...user\n      }\n    })\n    console.log('???????');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          로그인\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={onSubmitForm}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"이메일\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={onChangeInput}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            name=\"pwd\"\n            label=\"비밀번호\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={onChangeInput}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            로그인\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                비밀번호 찾기\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link component={RLink} to=\"/join\" variant=\"body2\">\n                회원가입\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n        <br />\n      </div>\n    </Container>\n  );\n}\n\n\n\n// const Login = () => {\n\n//   const classes = useStyles();\n//   const history = useHistory();\n//   const is_login = useSelector(state => state.userAction.is_login);\n//   const is_seller = useSelector(state => state.userAction.is_seller);\n//   const dispatch = useDispatch();\n//   const [user, setUser] = useState({\n//     email: '',\n//     pwd: '',\n//   })\n\n//   useEffect(() => {\n//     if (is_login) {\n//       if(is_seller){\n//         history.push('/seller');\n//       } else {\n//         history.push('/user');\n//       }\n//     }\n//   }, [history, is_login,is_seller])\n\n//   const onChangeInput = (e) => {\n//     setUser({\n//       ...user,\n//       [e.target.name]: e.target.value\n//     })\n//   }\n\n//   const login = () => {\n//     Axios.post('/login',{\n//       ...user\n//     })\n//     .then(res=>{\n//       if (res.data._id) {\n//         dispatch({ type: 'LOGIN', payload: { user_id: res.data._id, is_seller: res.data.is_seller, userName: res.data.name } });\n//         localStorage.setItem('is_login', true);\n//         localStorage.setItem('is_seller', res.data.is_seller);\n//         localStorage.setItem('user_id', res.data._id);\n//         localStorage.setItem('userName', res.data.name);\n//         console.log(res.data.result);\n//         if(res.data.is_seller){\n//           history.push('/seller');\n//         } else {\n//           history.push('/user');\n//         }\n//       } else {\n//         alert(res.data.result);\n//       }\n//     })\n//   }\n\n//   const onSubmitForm = (e) => {\n//     e.preventDefault();\n//     login();\n//   }\n\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           로그인\n//         </Typography>\n//         <form\n//           className={classes.form}\n//           noValidate\n//           onSubmit={onSubmitForm}>\n//           <TextField\n//             variant=\"outlined\"\n//             margin=\"normal\"\n//             fullWidth\n//             id=\"email\"\n//             label=\"이메일\"\n//             name=\"email\"\n//             autoComplete=\"email\"\n//             autoFocus\n//             onChange={onChangeInput}\n//           />\n//           <TextField\n//             variant=\"outlined\"\n//             margin=\"normal\"\n//             fullWidth\n//             name=\"pwd\"\n//             label=\"비밀번호\"\n//             type=\"password\"\n//             id=\"password\"\n//             autoComplete=\"current-password\"\n//             onChange={onChangeInput}\n//           />\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\"\n//             className={classes.submit}\n//           >\n//             로그인\n//           </Button>\n//           <Grid container>\n//             <Grid item xs>\n//               <Link href=\"#\" variant=\"body2\">\n//                 비밀번호 찾기\n//               </Link>\n//             </Grid>\n//             <Grid item>\n//               <Link component={RLink} to=\"/join\" variant=\"body2\">\n//                 회원가입\n//               </Link>\n//             </Grid>\n//           </Grid>\n//         </form>\n//         <br />\n//       </div>\n//     </Container>\n//   );\n// }\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RLink, useHistory } from 'react-router-dom';\nimport { SIGNUP } from '../../lib/queries';\nimport { useMutation } from '@apollo/client';\nimport Axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst JoinForm = () => {\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [signUp, { data }] = useMutation(SIGNUP);\n\n  const [userInfo, setInfo] = useState({\n    name: '',\n    email: '',\n    pwd: '',\n  })\n\n  useEffect(() => {\n    if (data) {\n      if (data.signUp) {\n        history.push('/login')\n      } else {\n        alert('이미 가입된 이메일입니다.')\n      }\n    }\n  }, [data, history])\n\n\n  const onChangeInfo = (e) => {\n    setInfo({\n      ...userInfo,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (userInfo.name === '' || userInfo.email === '' || userInfo.pwd === '') {\n      alert('빈 항목이 존재합니다.')\n    } else {\n      signUp({\n        variables: {\n          input: {\n            name: userInfo.name,\n            email: userInfo.email,\n            pwd: userInfo.pwd,\n            is_seller: false,\n          }\n        }\n      })\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          회원가입\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmitForm}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"이름\"\n                autoFocus\n                onChange={onChangeInfo}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"이메일\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                onChange={onChangeInfo}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"pwd\"\n                label=\"비밀번호\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={onChangeInfo}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            회원가입\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link component={RLink} to=\"/login\" variant=\"body2\">\n                이미 아이디가 있으신가요? 로그인\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\n\n\n// const JoinForm = () => {\n\n//   const classes = useStyles();\n//   const history = useHistory();\n\n//   const [userInfo, setInfo] = useState({\n//     name: '',\n//     email: '',\n//     pwd: '',\n//   })\n\n//   const onChangeInfo = (e) => {\n//     setInfo({\n//       ...userInfo,\n//       [e.target.name]: e.target.value,\n//     })\n//   }\n\n//   const join = () => {\n//     Axios.post('/join', {\n//       name: userInfo.name,\n//       email: userInfo.email,\n//       pwd: userInfo.pwd,\n//       is_seller: false,\n//     })\n//     .then(res=>{\n//       if (res.data) {\n//         history.push('/login')\n//       } else {\n//         alert('이미 가입된 이메일입니다.')\n//       }\n//     })\n//     .catch(err=>{\n//       console.log(err);\n//     })\n//   }\n\n//   const onSubmitForm = (e) => {\n//     e.preventDefault();\n//     if (userInfo.name === '' || userInfo.email === '' || userInfo.pwd === '') {\n//       alert('빈 항목이 존재합니다.')\n//     } else {\n//       join();\n//     }\n//   }\n\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>\n//           <LockOutlinedIcon />\n//         </Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           회원가입\n//         </Typography>\n//         <form className={classes.form} noValidate onSubmit={onSubmitForm}>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 autoComplete=\"name\"\n//                 name=\"name\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"name\"\n//                 label=\"이름\"\n//                 autoFocus\n//                 onChange={onChangeInfo}\n//               />\n//             </Grid>\n//             <Grid item xs={12}>\n//               <TextField\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"이메일\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 type=\"email\"\n//                 onChange={onChangeInfo}\n//               />\n//             </Grid>\n//             <Grid item xs={12}>\n//               <TextField\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 name=\"pwd\"\n//                 label=\"비밀번호\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//                 onChange={onChangeInfo}\n//               />\n//             </Grid>\n//           </Grid>\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\"\n//             className={classes.submit}\n//           >\n//             회원가입\n//           </Button>\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               <Link component={RLink} to=\"/login\" variant=\"body2\">\n//                 이미 아이디가 있으신가요? 로그인\n//               </Link>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </div>\n//     </Container>\n//   );\n// }\n\nexport default JoinForm;","import JoinForm from './JoinForm';\n\nexport default JoinForm;","import React, { useEffect, useState } from 'react';\nimport {REQUEST_TIME_OVER} from '../lib/queries';\nimport { useMutation } from '@apollo/client';\nimport Axios from 'axios';\n\nconst Counter = ({data}) => {\n    const [start, setStart] = useState(parseInt(new Date().getTime() / 1000));\n    const [end] = useState(parseInt(new Date(data.deadLine) / 1000));\n\n    const [ timeOver ] = useMutation(REQUEST_TIME_OVER,{\n        variables : {\n            request : data._id\n        }\n    })\n\n    useEffect(() => {\n        let interval;\n        if (parseInt(end - start) <= 0) {\n            timeOver();\n            clearInterval(interval);\n            console.log('stop');\n        } else {\n            interval = setInterval(() => {\n                countDown();\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [end, start]);\n\n\n    function countDown() {\n        setStart(parseInt(new Date().getTime() / 1000));\n    }\n    let hour = parseInt((end - start) / 60 / 60);\n    let minutes = parseInt(((end - start) / 60) % 60);\n    let seconds = parseInt((end - start) % 60);\n    return (\n        <>\n        {\n        (parseInt(end - start) <= 0)\n            ?\n            <span>요청 마감</span>\n            :\n        <>\n            {hour > 9 ? <span>요청 마감까지 : {hour}:</span> : <span>요청 마감까지 : 0{hour}:</span>}\n            {minutes > 9 ? <span>{minutes}:</span> : <span>0{minutes}:</span>}\n            {seconds > 9 ? <span>{seconds}</span> : <span>0{seconds}</span>}\n        </>\n        }\n        </>\n    )\n}\n\n\n// const Counter = ({data}) => {\n//     const [start, setStart] = useState(parseInt(new Date().getTime() / 1000));\n//     const [end] = useState(parseInt(new Date(data.deadLine) / 1000));\n\n//     const requestTimeOver = () => {\n//         Axios.post('/request-over',{\n//             request : data._id\n//         })\n//         .then(res=>{\n//             console.log(res.data);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     useEffect(() => {\n//         let interval;\n//         if (parseInt(end - start) <= 0) {\n//             requestTimeOver();\n//             clearInterval(interval);\n//             console.log('stop');\n//         } else {\n//             interval = setInterval(() => {\n//                 countDown();\n//             }, 1000);\n//         }\n//         return () => clearInterval(interval);\n//     }, [end, start]);\n\n\n//     function countDown() {\n//         setStart(parseInt(new Date().getTime() / 1000));\n//     }\n//     let hour = parseInt((end - start) / 60 / 60);\n//     let minutes = parseInt(((end - start) / 60) % 60);\n//     let seconds = parseInt((end - start) % 60);\n//     return (\n//         <>\n//         {\n//         (parseInt(end - start) <= 0)\n//             ?\n//             <span>요청 마감</span>\n//             :\n//         <>\n//             {hour > 9 ? <span>요청 마감까지 : {hour}:</span> : <span>요청 마감까지 : 0{hour}:</span>}\n//             {minutes > 9 ? <span>{minutes}:</span> : <span>0{minutes}:</span>}\n//             {seconds > 9 ? <span>{seconds}</span> : <span>0{seconds}</span>}\n//         </>\n//         }\n//         </>\n//     )\n// }\n\nexport default Counter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Counter from '../../../components/Counter'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip'\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Grid, Paper } from '@material-ui/core';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        transition: 'all 0.1s',\n        '&:hover': {\n            backgroundColor: '#F2F3F4',\n        }\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    gridStyle: {\n        display: 'inline-block',\n        margin: 'auto',\n    },\n    titleStyle: {\n        textDecoration: 'none',\n        color: 'black'\n    },\n    tagStyle: {\n        display: 'inline-block',\n        backgroundColor: 'lightgray',\n        borderRadius: '4px',\n        padding: '3px 5px',\n        marginTop: '5px',\n        marginRight: '4px',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    detailStyle: {\n        overflow: 'hidden',\n        width: '400px',\n        height: '40px',\n    },\n    tagDivStyle : {\n        display : 'block',\n        textOverflow : 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace : 'nowrap',\n        width: '400px',\n        height: '30px',\n    }\n}));\n\nfunction Request({ data, checked, tags, setTags }) {\n\n    const classes = useStyles();\n\n    const showTagList = data.tags.map((obj, index) => {\n        return <small onClick={() => { setTags([...tags, obj]) }} className={classes.tagStyle} key={index}>{obj}</small>\n    })\n\n    return (\n        <Grow in={!checked} timeout={300}>\n            <Paper elevation={3}>\n                <Card className={classes.card}>\n                    <CardContent className={classes.cardContent}>\n                        <Link className={classes.titleStyle} to={{ pathname: `/seller/request/${data._id}`, state: { data: data } }}>\n                            <small>{data.requestedAt}</small><br />\n                            <Typography variant=\"h5\" gutterBottom>\n                                {data.author.name} 님의 {data.category} 요청\n                                    </Typography>\n                            <Typography className={classes.detailStyle} variant=\"subtitle2\" paragraph>\n                                {data.detail}\n                            </Typography>\n                        </Link>\n                        <div className={classes.tagDivStyle}>\n                            {showTagList}\n                        </div>\n                        <br/>\n                        <Counter data={data}></Counter>\n                    </CardContent>\n                </Card>\n            </Paper>\n        </Grow>\n    )\n}\n\nexport default Request;\n\n","import React,{useState} from 'react';\nimport { Popover, Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst SortButton = () => {\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const [sortValue,setSortValue] = useState('정렬기준');\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const onClickSort = (value) => {\n        setSortValue(value);\n        setAnchorEl(null);\n    }\n\n    return (\n        <>\n        <Button style={{ float: 'right' }} onClick={handleClick}>\n            {sortValue}<ArrowDropDownIcon />\n        </Button>\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n        >\n            <List>\n                <ListItem button onClick={()=>{onClickSort('마감임박순')}}>\n                    <ListItemText primary=\"마감임박순\" />\n                </ListItem>\n                <ListItem button onClick={()=>{onClickSort('요청일순')}}>\n                    <ListItemText primary=\"요청일순\" />\n                </ListItem>\n            </List>\n        </Popover>\n        </>\n    )\n}\n\nexport default SortButton;","import React, { useState } from 'react';\nimport Request from './Request';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { GET_ALL_REQUESTS } from '../../../lib/queries';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport SortButton from './SortButton';\nimport { useHistory } from 'react-router-dom';\nimport { Typography, Toolbar, Chip } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingBottom: theme.spacing(4),\n        margin: 'auto',\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '10% auto',\n    },\n    tagStyle: {\n        marginRight: '4px',\n    }\n\n}));\n\n\nconst RequestList = ({ category }) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const { loading, data, error } = useQuery(GET_ALL_REQUESTS, {\n        fetchPolicy: 'cache-and-network',\n    });\n\n    const [tags, setTags] = useState([]);\n\n    const tagSort = tags.map((obj, index) => {\n        return <Chip className={classes.tagStyle} key={index} label={obj} variant=\"default\" size=\"small\" onDelete={() => { onClickRemove(index) }} />\n    })\n\n    const onClickRemove = (index) => {\n        const list = tags.filter((obj, x) => {\n            return x !== index;\n        })\n        setTags(list)\n    }\n\n\n\n\n    const [listSort, { loading: ld, data: dt, error: er }] = useLazyQuery()\n\n\n\n    if (loading) {\n        return (\n            <CircularProgress className={classes.loadingStyle} />\n        )\n    }\n\n    if (!loading) {\n        console.log(data);\n    }\n\n\n    if (error) {\n        alert(error);\n        history.push('/');\n        return (\n            <CircularProgress className={classes.loadingStyle} />\n        )\n    }\n\n\n    const requestList = data.getAllRequests\n        .map((obj) => {\n            return (\n                <Grid key={obj._id} item xs={6}>\n                    <Request tags={tags} setTags={setTags} data={obj} checked={loading}></Request>\n                </Grid>\n            )\n        })\n\n\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n            <Typography variant=\"h5\" style={{ display: 'inline-block', margin: '0px' }} gutterBottom>{category}</Typography>\n            <br />\n            <br/>\n            {tagSort}\n            <SortButton category={category} />\n            <Grid container spacing={3}>\n                {requestList}\n            </Grid>\n        </Container>\n    )\n\n\n}\n\n// const RequestList = ({ category }) => {\n\n//     const classes = useStyles();\n//     const [data, setData] = useState([])\n//     const [loading, setLoading] = useState(true);\n\n//     const getAllRequests = () =>{\n//         axios.get('/all-request')\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     useEffect(() => {\n//         getAllRequests();\n//     }, [])\n\n\n\n//     if (loading) {\n//         return (\n//             <CircularProgress className={classes.loadingStyle} />\n//         )\n//     }\n\n//     if (!loading) {\n//         console.log(data);\n//     }\n\n\n//     const requestList = data\n//         .map((obj) => {\n//             return (\n//                 <Grid key={obj._id} item xs={12}>\n//                     <Request data={obj}></Request>\n//                 </Grid>\n//             )\n//         })\n\n\n//     return (\n//         <Container className={classes.cardGrid} maxWidth=\"md\">\n//             <h2 style={{ display: 'inline-block', margin: '0px' }}>{category}</h2>\n//             <SortButton category={category} />\n//             <Grid container spacing={3}>\n//                 {requestList}\n//             </Grid>\n//         </Container>\n//     )\n\n\n// }\n\n\nexport default RequestList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 180,\n    height: 43,\n    // '&:hover': {\n    //     width : 250,\n    // },\n    // '&:focus-within':{\n    //     width : 250,\n    // }\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nconst SearchBar = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n      <SearchIcon />\n    </IconButton>\n      <InputBase\n        className={classes.input}\n      />\n    </Paper>\n  );\n}\n\nexport default SearchBar;","import React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport SearchBar from './SearchBar';\n\nconst CategoryMenu = ({setCategory}) => {\n\n    const categories = [\n        {\n            category : '모든 요청'\n        },\n        {\n            category : '웹 개발'\n        },\n        {\n            category : '앱 개발'\n        },\n        {\n            category : '소프트웨어 개발'\n        },\n        {\n            category : '유지보수'\n        },\n    ]\n\n    const onClickCategory = (value) => {\n        setCategory(value)\n    }\n\n    const categoryList = categories.map((obj,index)=>{\n        return(\n            <ListItem key={index} button onClick={() => { onClickCategory(obj.category) }}>\n                <ListItemText primary={obj.category} />\n            </ListItem>\n        )\n    })\n\n    return (\n        <>\n        <SearchBar/>\n        <List>\n            {categoryList}\n        </List>\n        </>\n    )\n}\n\nexport default CategoryMenu;\n","import React,{useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Divider, Container, makeStyles } from '@material-ui/core';\nimport RequestList from './RequestList';\nimport CategoryMenu from './CategoryMenu';\n\nconst useStyle = makeStyles((theme)=>({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n        color : 'rgb(104,104,106)',\n    },\n}))\n\n\nfunction RequestMain() {\n\n    const classes = useStyle();\n    const [category,setCategory] = useState('모든 요청');\n\n    return (\n        <Container className={classes.heroContent}>\n            <Grid container spacing={9}>\n                <Grid item xs={2}>\n                    <CategoryMenu setCategory={setCategory}/>\n                </Grid>\n                <Grid item xs={9}>\n                    <RequestList category={category}/>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\n\nexport default RequestMain;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { useMutation } from '@apollo/client';\nimport { SEND_BID } from '../../../lib/queries';\nimport Axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\n\nconst Bidding = ({ open, setOpen, data }) => {\n\n    const classes = useStyles();\n\n    const [price, setPrice] = useState(0);\n\n    const user_id = useSelector(state => state.userAction.user_id);\n\n    const userName = useSelector(state => state.userAction.userName);\n\n    const [sendBid, { loading, data: data_result }] = useMutation(SEND_BID);\n\n    useEffect(() => {\n        if (data_result) {\n            alert(data_result.sendBid)\n            setOpen(false);\n        }\n    }, [data_result, setOpen])\n\n\n    const onChangePrice = (e) => {\n        setPrice(Number(e.target.value).toLocaleString('en'));\n    }\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        sendBid({\n            variables: {\n                input: {\n                    request: data._id,\n                    author: user_id,\n                    name: userName,\n                    price: price,\n\n                }\n            }\n        })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            {loading\n                ?\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                :\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">입찰하기</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            입력하신 가격과 함께 프로필이 구매자에게 전달됩니다.\n                    </DialogContentText>\n                        <form onSubmit={onSubmitForm}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"price\"\n                                label=\"총 금액\"\n                                type=\"number\"\n                                fullWidth\n                                onChange={onChangePrice}\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={onSubmitForm} color=\"primary\">\n                            입찰\n                        </Button>\n                        <Button onClick={handleClose} color=\"primary\">\n                            취소\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            }\n        </div>\n    )\n}\n\n\n// const Bidding = ({ open, setOpen, data }) => {\n\n//     const classes = useStyles();\n\n//     const [price, setPrice] = useState(0);\n\n//     const user_id = useSelector(state => state.userAction.user_id);\n\n//     const userName = useSelector(state => state.userAction.userName);\n\n//     const [loading, setloading] = useState(false);\n\n//     const sendBid = () => {\n//         setloading(true);\n//         Axios.post('/bid', {\n//             request: data._id,\n//             author: user_id,\n//             name: userName,\n//             price: price,\n//         })\n//         .then(res=>{\n//             alert(res.data);\n//             setOpen(false);\n//             setloading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n\n\n//     const onChangePrice = (e) => {\n//         setPrice(e.target.value);\n//     }\n\n//     const onSubmitForm = (e) => {\n//         e.preventDefault();\n//         sendBid();\n//     }\n\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n\n//     return (\n//         <div>\n//             {loading\n//                 ?\n//                 <Backdrop className={classes.backdrop} open={loading}>\n//                     <CircularProgress color=\"inherit\" />\n//                 </Backdrop>\n//                 :\n//                 <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n//                     <DialogTitle id=\"form-dialog-title\">입찰하기</DialogTitle>\n//                     <DialogContent>\n//                         <DialogContentText>\n//                             입력하신 가격과 함께 프로필이 구매자에게 전달됩니다.\n//                     </DialogContentText>\n//                         <form onSubmit={onSubmitForm}>\n//                             <TextField\n//                                 autoFocus\n//                                 margin=\"dense\"\n//                                 id=\"price\"\n//                                 label=\"총 금액\"\n//                                 type=\"number\"\n//                                 fullWidth\n//                                 onChange={onChangePrice}\n//                             />\n//                         </form>\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={onSubmitForm} color=\"primary\">\n//                             입찰\n//                     </Button>\n//                         <Button onClick={handleClose} color=\"primary\">\n//                             취소\n//                     </Button>\n//                     </DialogActions>\n//                 </Dialog>\n//             }\n//         </div>\n//     )\n// }\n\nexport default Bidding;","import Bidding from './Bidding';\n\nexport default Bidding;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Chip from '@material-ui/core/Chip';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport LabelIcon from '@material-ui/icons/Label';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Paper, Typography, makeStyles, CardHeader, Toolbar, Divider } from '@material-ui/core';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\n\nconst useStyle = makeStyles((theme) => ({\n    rootStyle: {\n        padding: '10px',\n    }\n}))\n\n\nconst RequestCard = ({ obj,onClickChecked }) => {\n\n    const classes = useStyle();\n\n    return (\n        // <Card className={classes.rootStyle} elevation={3}>\n        //     {obj.author.name !== null \n        //         &&\n        //         <CardHeader title= {`${obj.author.name}님의 요청서`} subheader={obj.requestedAt} />\n        //     }\n        //     <CardContent>\n        //         <List>\n        //             {[\n        //                 {\n        //                     icon: () => <BuildIcon />,\n        //                     title: '카테고리',\n        //                     text: obj.category\n        //                 },\n        //                 // {\n        //                 //     icon: () => <QueryBuilderIcon />,\n        //                 //     title : '요청 마감일',\n        //                 //     text: new Date(obj.deadLine).toLocaleString()\n        //                 // },\n        //                 {\n        //                     icon: () => <AddCircleOutlineIcon />,\n        //                     title: '상세설명',\n        //                     text: obj.detail\n        //                 },\n        //                 {\n        //                     icon: () => <LabelIcon />,\n        //                     title: '태그',\n        //                     text: obj.tags.map((obj2, index) => {\n        //                         return <span key={index}><Chip variant=\"outlined\" size=\"small\" label={obj2} />&nbsp;</span>\n        //                     })\n        //                 },\n        //                 {\n        //                     icon: () => <CalendarTodayIcon />,\n        //                     title: '희망 제작 마감일',\n        //                     text: obj.hopeDate\n        //                 },\n        //             ].map((obj3, index3) => {\n        //                 return (\n        //                     <ListItem key={index3}>\n        //                         <ListItemIcon>\n        //                             <Tooltip arrow title={obj3.title}>\n        //                                 {obj3.icon()}\n        //                             </Tooltip>\n        //                         </ListItemIcon>\n        //                         {/* <ListItemText\n        //                         primary={obj3.title,obj3.icon()}\n        //                     /> */}\n        //                         <ListItemText\n        //                             primary={obj3.text}\n        //                         />\n        //                     </ListItem>\n        //                 )\n        //             })}\n        //         </List>\n        //     </CardContent>\n        // </Card>\n\n        <Card onClick={onClickChecked} className={classes.rootStyle} elevation={3}>\n            {obj.author.name !== null\n                &&\n                <CardHeader style={{ textAlign: 'center' }} title={`${obj.author.name}님의 요청서`} subheader={obj.requestedAt} />\n            }\n            <Divider/>\n            <CardContent>\n                <List dense={true}>\n                    {[\n                        {\n                            icon: () => <BuildIcon />,\n                            title: '카테고리',\n                            text: obj.category\n                        },\n                        // {\n                        //     icon: () => <QueryBuilderIcon />,\n                        //     title : '요청 마감일',\n                        //     text: new Date(obj.deadLine).toLocaleString()\n                        // },\n                        {\n                            icon: () => <AddCircleOutlineIcon />,\n                            title: '상세설명',\n                            text: obj.detail\n                        },\n                        {\n                            icon: () => <LabelIcon />,\n                            title: '태그',\n                            text: obj.tags.map((obj2, index) => {\n                                return <span key={index}><Chip variant=\"outlined\" size=\"small\" label={obj2} />&nbsp;</span>\n                            })\n                        },\n                        {\n                            icon: () => <CalendarTodayIcon />,\n                            title: '희망 제작 마감일',\n                            text: obj.hopeDate\n                        },\n                    ].map((obj3, index3) => {\n                        return (\n                            <div key={index3}>\n                                <ListItem>\n                                    {obj3.icon()} &nbsp;&nbsp;&nbsp;\n                                    <ListItemText secondary={obj3.title} secondaryTypographyProps={{ variant: \"h6\" }} />\n                                </ListItem>\n                                <ListItem>\n                                    &nbsp;&nbsp;\n                                    <SubdirectoryArrowRightIcon fontSize=\"small\" />&nbsp;&nbsp;\n                                    <ListItemText primary={obj3.text} primaryTypographyProps={{ variant: \"h6\" }} />\n                                </ListItem>\n                            </div>\n                        )\n                    })}\n                </List>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default RequestCard\n","import React, { useState ,useEffect} from 'react';\nimport Counter from '../../../components/Counter'\nimport { Container, Divider, Typography, ListItemText, List, ListItem, ListItemIcon } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Bidding from '../Bidding';\nimport RequestCard from '../../../components/RequestCard';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    gridStyle: {\n        margin:'auto',\n        width: \"90%\",\n        color: 'rgb(104,104,106)'\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '4% auto',\n    },\n}));\n\nfunction RequestDetail(props) {\n\n    const classes = useStyles();\n    const [data] = useState(props.location.state.data);\n    const [open, setOpen] = useState(false);\n    const [checked, setChecked] = useState(false);\n\n    useEffect(()=>{\n        setChecked(true);\n        return () => {\n            setChecked(false);\n        }\n    },[])\n\n    return (\n        <Fade in={checked}>\n            <Container className={classes.root}>\n                <Grid className={classes.gridStyle} container spacing={9}>\n                    <Grid item xs={6}>\n                        <RequestCard obj={data} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        {(data.deadLine < new Date().getTime())\n                            ?\n                            <>\n                                <Typography variant=\"h5\" gutterBottom>요청 마감</Typography>\n                                요청이 마감되었습니다.\n                            </>\n                            :\n                            <>\n                                {[\n                                    '구매자는 여러개의 견적을 받아 한가지를 선택하게 됩니다.',\n                                    '견적을 전송한 후에 구매자와 채팅을 할 수 있습니다.',\n                                    '나의 견적이 선택이 되면 마이페이지/진행중인 거래 에서 확인하실 수 있습니다.',\n                                    '선택이 된 이후에도 합의 하에 세부 사항을 조정할 수 있습니다.',\n                                ].map((obj, index) => {\n                                    return (\n                                        <List dense={true} key={index}>\n                                            <ListItem>\n                                                <CheckIcon />&nbsp;&nbsp;\n                                                <ListItemText primary={obj} primaryTypographyProps={{variant:\"subtitle1\"}} />\n                                            </ListItem>\n                                        </List>\n                                    )\n                                })\n                                }\n\n                                <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center' }}><Counter data={data} /></Typography>\n                                <br/>\n                                <Button style={{ width: \"100%\" }} variant=\"outlined\" onClick={() => { setOpen(true) }}>\n                                    입찰하기\n                                </Button>\n                            </>\n                        }\n                    </Grid>\n                </Grid>\n                <Divider />\n                <Bidding data={data} open={open} setOpen={setOpen} />\n            </Container>\n        </Fade>\n    )\n}\n\nexport default RequestDetail;","import React,{useEffect,useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { Divider, Paper } from '@material-ui/core';\nimport Background from '../../img/background3.jpg'\nimport { Link } from 'react-router-dom';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Zoom from '@material-ui/core/Zoom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    divStyle: {\n        backgroundImage: `url(${Background})`,\n        height: '400px',\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    containerStyle: {\n        backgroundColor: 'white',\n        padding: theme.spacing(3, 3, 3),\n        margin: '100px auto'\n    },\n    buttonStyle: {\n        float: 'right',\n        marginTop: '8px',\n        marginRight: '50px',\n    },\n    linkStyle: {\n        color: 'rgb(104,104,106)',\n        float : 'right',\n    }\n\n}));\n\nconst SellerHome = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        setChecked(true);\n        return () => {\n            setChecked(false);\n        }\n    }, [])\n\n    return (\n        <>\n            <div className={classes.divStyle}>\n                <Container>\n                    <Grid container className={classes.heroContent}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                                Try it!\n                        </Typography>\n                            <Typography variant=\"h3\" color=\"textSecondary\" paragraph>\n                                When you want to have own website,<br />\n                                Here is best solution.\n                        </Typography>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n            <Container>\n                <Grid container spacing={9}>\n                    <Grid item xs={6}>\n                    <Zoom in={checked} timeout={250}>\n                        <Paper className={classes.containerStyle} elevation={3}>\n                            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n                                is Guest?\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"textSecondary\" paragraph>\n                                when you want to have own website,<br />\n                                here is best solution.\n                                <Button component={Link} className={classes.linkStyle} to=\"/user/enroll\">\n                                    REQUEST ENROLL<ArrowForwardIcon fontSize=\"small\" />\n                                </Button>\n                            </Typography>\n                        </Paper>\n                    </Zoom>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Zoom in={checked} timeout={500}>\n                            <Paper className={classes.containerStyle} elevation={3}>\n                                <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n                                    is Expert?\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"textSecondary\" paragraph>\n                                    when you want to have own website,<br/>\n                                    here is best solution.\n                                    <Button component={Link} className={classes.linkStyle} to=\"/seller/request\">\n                                        REQUEST LIST<ArrowForwardIcon fontSize=\"small\" />\n                                    </Button>\n                                </Typography>\n                            </Paper>\n                        </Zoom>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n\nexport default SellerHome;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\n\n\nconst myTextStyle = {\n    display: 'inline-block',\n    border: \"1px solid yellow\",\n    borderRadius: '5px',\n    padding: \"2px 10px\",\n    backgroundColor: 'yellow',\n    color: 'black',\n    fontSize: '15px',\n    maxWidth: '300px',\n    whiteSpace: 'pre-line',\n    wordBreak: 'break-all',\n}\n\n\nconst otherTextStyle = {\n    display: 'inline-block',\n    border: \"1px solid white\",\n    borderRadius: '5px',\n    padding: \"2px 10px\",\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: '15px',\n    maxWidth: '300px',\n    whiteSpace: 'pre-line',\n    wordBreak: 'break-all',\n}\n\nconst systemStyle = {\n    textAlign: \"center\",\n    margin: \"15px 20px\",\n}\n\n\n\nfunction ChatList({ data, userName }) {\n\n    return (\n        <>\n            {(data.name === 'system') ?\n                <>\n                    <div style={systemStyle}>\n                        {data.message}\n                    </div>\n                </> :\n                (data.name === userName) ?\n                    <>\n                        <ListItem alignItems=\"flex-start\" style={{ textAlign: 'right', paddingRight: '0px' }}>\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <small>{data.createdAt}</small>\n                                &nbsp;&nbsp;\n                                <span style={myTextStyle}>\n                                            {data.message}\n                                        </span>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    </> :\n                    <>\n                        <ListItem alignItems=\"flex-start\" style={{ paddingLeft: '0px' }}>\n                            <ListItemAvatar >\n                                <Avatar alt=\"Remy Sharp\" src=\"https://placeimg.com/200/100/any\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={<small>{data.name}</small>}\n                                secondary={\n                                    <React.Fragment>\n                                        <span style={otherTextStyle}>\n                                            {data.message}\n                                        </span>\n                            &nbsp;&nbsp;\n                            <small>{data.createdAt}</small>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    </>\n            }\n        </>\n    )\n}\n\nexport default ChatList;","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { Input, Container, Divider, InputAdornment, OutlinedInput } from '@material-ui/core';\nimport ChatList from './ChatList';\nimport { START_CHAT, SEND_NEW_MESSAGE } from '../../lib/queries';\nimport { useSubscription, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        background: 'lightGray',\n        marginBottom: '15px',\n    },\n    inline: {\n        display: 'inline',\n    },\n    myChat: {\n        float: 'right',\n    },\n    container: {\n        width: '100%',\n        height: '600px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        margin: '0px auto',\n    },\n    inputStyle: {\n        width: '100%',\n        padding: '15px 0px 15px 15px',\n    }\n}));\n\n\n\nfunction ChatBox({ userInfo }) {\n\n    const classes = useStyles();\n\n    const [message, setMessage] = useState('');\n\n    const [newMessages, setNewMessage] = useState([]);\n\n    const { data, error } = useSubscription(START_CHAT, {\n        variables: {\n            room: userInfo.room\n        }\n    });\n\n    const objDiv = useRef();\n\n    const [sendNewMessage] = useMutation(SEND_NEW_MESSAGE);\n\n    const userName = useSelector(state => state.userAction.userName);\n\n    useEffect(() => {\n        objDiv.current.scrollTop = objDiv.current.scrollHeight;\n        if (data) {\n            setNewMessage((newMessages) => [\n                ...newMessages,\n                data.newMessage,\n            ]);\n        }\n        if (error) {\n            console.log(error);\n        }\n    }, [data, error])\n\n    useEffect(() => {\n        objDiv.current.scrollTop = objDiv.current.scrollHeight;\n    }, [newMessages])\n\n\n\n    const lastMessageList = userInfo.messages.map((data, i) => {\n        return <ChatList key={i} data={data} userName={userName} />\n    })\n\n    const newMessageList = newMessages.map((data, i) => {\n        return <ChatList key={i} data={data} userName={userName} />\n    })\n\n    const onChangeMessage = (e) => {\n        setMessage(e.target.value);\n    }\n\n    const onSubmitForm = (e) => {\n        if (e.keyCode === 13)\n            if (!e.shiftKey) {\n                if (message) {\n                    e.preventDefault();\n                    sendNewMessage({\n                        variables: {\n                            input: {\n                                room: userInfo.room,\n                                name: userName,\n                                message: message\n                            }\n                        }\n                    })\n                    setMessage('');\n                } else {\n                    e.preventDefault();\n                    return;\n                }\n            }\n    }\n\n    const onClickForm = () => {\n        if (message) {\n            sendNewMessage({\n                variables: {\n                    input: {\n                        room: userInfo.room,\n                        name: userName,\n                        message: message\n                    }\n                }\n            })\n            setMessage('');\n        } else {\n            return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Container ref={objDiv} className={classes.container}>\n                <List className={classes.root}>\n                    {lastMessageList}\n                    {newMessageList}\n                </List>\n            </Container>\n            <form onKeyDown={onSubmitForm}>\n                <OutlinedInput\n                    className={classes.inputStyle}\n                    va\n                    rowsMax={4}\n                    multiline\n                    value={message}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton onClick={onClickForm}>\n                                <SendIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    onChange={onChangeMessage} />\n            </form>\n        </div>\n    );\n}\n\nexport default ChatBox;","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CircularProgress, Backdrop, Divider, IconButton, Grid } from '@material-ui/core';\nimport { GET_MY_ROOM } from '../../lib/queries';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatBox from './ChatBox';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst Main = ({ request, seller, open, onClose }) => {\n\n    const classes = useStyles();\n\n    const [getRoom, { loading, data, error, called }] = useLazyQuery(GET_MY_ROOM, {\n        variables: {\n            request: request,\n            seller: seller,\n        },\n        fetchPolicy: 'cache-and-network'\n    })\n\n    useEffect(() => {\n        if (open) {\n            getRoom();\n        }\n        return () => {\n            console.log('disconnect');\n        }\n    }, [open])\n\n    if (loading) {\n        return (\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        )\n    }\n\n\n    if (error) {\n        console.log(error);\n        return (\n            <h1>error</h1>\n        )\n    }\n\n    if (!called) {\n        return <></>\n    }\n\n    if (called && !loading) {\n        console.log('chat connect');\n        return (\n            <Dialog onClose={onClose} open={open}>\n                <DialogTitle style={{ padding:'0px' }}>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <div style={{marginLeft:'14px',marginTop:'10px'}}>채팅</div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <IconButton onClick={onClose} style={{ float: 'right'}}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <Divider />\n                <DialogContent style={{backgroundColor:'lightgray'}}>\n                    <ChatBox userInfo={{\n                        room: data.getMyRoom._id,\n                        messages: data.getMyRoom.messages,\n                    }}\n                    />\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\n// const Main = ({ request, seller, open, onClose }) => {\n\n//     const classes = useStyles();\n\n//     const [data, setData] = useState();\n//     const [loading, setLoading] = useState(true);\n\n//     const getMyRoom = () => {\n//         Axios.get('/my-room',{\n//             request : request,\n//             seller : seller,\n//         })\n//         .then((res) => {\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch((err) => {\n//             console.log(err);\n//         });\n//     }\n\n//     useEffect(() => {\n//         if (open) {\n//             getMyRoom();\n//         }\n//         return () => {\n//             console.log('disconnect');\n//         }\n//     }, [open])\n\n\n//     if (loading) {\n//         return (\n//             <Backdrop className={classes.backdrop} open={loading}>\n//                 <CircularProgress color=\"inherit\" />\n//             </Backdrop>\n//         )\n//     }\n\n//     if (!loading) {\n//         return (\n//             <Dialog onClose={onClose} open={open}>\n//                 <DialogTitle style={{ padding:'0px' }}>\n//                     <Grid container>\n//                         <Grid item xs={6}>\n//                             <div style={{marginLeft:'14px',marginTop:'10px'}}>채팅</div>\n//                         </Grid>\n//                         <Grid item xs={6}>\n//                             <IconButton onClick={onClose} style={{ float: 'right'}}>\n//                                 <CloseIcon />\n//                             </IconButton>\n//                         </Grid>\n//                     </Grid>\n//                 </DialogTitle>\n//                 <Divider />\n//                 <DialogContent style={{backgroundColor:'lightgray'}}>\n//                     <ChatBox userInfo={{\n//                         room: data._id,\n//                         messages: data.messages,\n//                     }}\n//                     />\n//                 </DialogContent>\n//             </Dialog>\n//         )\n//     }\n// }\n\nexport default Main;","import Main from './Main';\n\nexport default Main;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CircularProgress, Container, Grid, CardHeader, Divider, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { GET_MY_BIDS } from '../../../lib/queries';\nimport { useQuery } from '@apollo/client';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Chat from '../../../components/chat';\n\n\n\nconst BidList = () => {\n\n    const user_id = useSelector(state => state.userAction.user_id);\n\n    const loadingStyle = {\n        display: 'block',\n        margin: '18% auto',\n    }\n\n    const [checked, setChecked] = useState(false);\n\n    const [chatOpen,setChatOpen] = useState(false);\n\n    const handleChatClose = () => {\n        setChatOpen(false);\n    }\n\n    const onClickChecked = () => {\n        if (checked) {\n            setChecked(false);\n        } else {\n            setChecked(true);\n        }\n    }\n\n    const history = useHistory();\n\n    const { loading, data, error } = useQuery(GET_MY_BIDS, {\n        variables: { author: user_id },\n        fetchPolicy: 'cache-and-network',\n    }\n    )\n\n    if (error) {\n        alert(error);\n        history.push('/');\n        return (\n            <CircularProgress style={loadingStyle} />\n        )\n    }\n\n    if (loading) {\n        return (\n            <CircularProgress style={loadingStyle} />\n        )\n    } else {\n\n        const BidHistory = data.getMyBids.map((obj) => {\n            return (\n                <TableRow key={obj.request._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {obj.request.category}\n                    </TableCell>\n                    <TableCell align=\"center\">{obj.request.author.name}</TableCell>\n                    <TableCell align=\"center\">{obj.request.requestedAt}</TableCell>\n                    <TableCell align=\"center\">{obj.state}</TableCell>\n                </TableRow>\n            )\n        })\n\n        const ChosenList = data.getMyBids.filter((obj) => {\n            return obj.state === '거래 진행중';\n        })\n\n        const MyChosenList = ChosenList.map((obj) => {\n            return (\n\n                <Grid key={obj.request._id} style={{ margin: 'auto' }} item xs={4}>\n                    <Collapse in={checked} collapsedHeight={88}>\n                        <Card elevation={3}>\n                            <CardHeader onClick={onClickChecked} action={checked ? <ExpandLessIcon /> : <ExpandMoreIcon />} style={{ textAlign: 'center' }} title={`${obj.request.author.name}님의 요청서`} subheader={obj.request.requestedAt} />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={6}>\n                                        <Button style={{ width: '100%' }} variant=\"outlined\">\n                                            자세히\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Button onClick={()=>{setChatOpen(true)}} style={{ width: '100%' }} variant=\"outlined\">\n                                            1:1 채팅\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                            <Chat open={chatOpen} onClose={handleChatClose} request={obj.request._id} seller={user_id} />\n                        </Card>\n                    </Collapse>\n                </Grid>\n            )\n        })\n\n        return (\n            <div>\n                <Typography variant=\"h5\" gutterBottom>진행중인 거래</Typography>\n                <Container>\n                    {ChosenList.length === 0\n                        ?\n                        <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center' }}>현재 진행중인 거래가 없습니다.</Typography>\n                        :\n                        <Grid container>\n                            {MyChosenList}\n                        </Grid>\n                    }\n                </Container>\n                <br/><br/><br/>\n                <Typography variant=\"h5\" gutterBottom>거래내역</Typography>\n                <TableContainer variant=\"outlined\" component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>카테고리</TableCell>\n                                <TableCell align=\"center\">이름</TableCell>\n                                <TableCell align=\"center\">요청일</TableCell>\n                                <TableCell align=\"center\">상태</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {BidHistory}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n\n        )\n    }\n\n}\n\n// const BidList = () => {\n\n//     const user_id = useSelector(state => state.userAction.user_id);\n\n//     const loadingStyle = {\n//         display: 'block',\n//         margin: '18% auto',\n//     }\n\n//     const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     const getMyBids = () => {\n//         axios.get('/my-bid',{\n//             author : user_id\n//         })\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     useEffect(() => {\n//         getMyBids();\n//     }, [])\n\n//     if (loading) {\n//         return (\n//             <CircularProgress style={loadingStyle} />\n//         )\n//     } else {\n\n//         const BidHistory = data.map((obj) => {\n//             return (\n//                 <TableRow key={obj.request._id}>\n//                     <TableCell component=\"th\" scope=\"row\">\n//                         {obj.request.category}\n//                     </TableCell>\n//                     <TableCell align=\"center\">{obj.request.author.name}</TableCell>\n//                     <TableCell align=\"center\">{obj.request.requestedAt}</TableCell>\n//                     <TableCell align=\"center\">{obj.state}</TableCell>\n//                 </TableRow>\n//             )\n//         })\n\n//         const ChosenList = data.filter((obj) => {\n//             return obj.state === '거래 진행중';\n//         })\n\n//         const WaittingList = data.filter((obj) => {\n//             return obj.state === '거래 대기중';\n//         })\n\n//         const MyChosenList = ChosenList.map((obj) => {\n//             return (\n//                 <Grid key={obj._id} style={{ margin: 'auto' }} item xs={4}>\n//                     <RequestCard obj={obj.request} />\n//                 </Grid>\n//             )\n//         })\n\n//         const MyWaittingList = WaittingList.map((obj) => {\n//             return (\n//                 <Grid key={obj.request._id} style={{ margin: 'auto' }} item xs={4}>\n//                     <Card style={{ textAlign: 'center' }} variant=\"outlined\">\n//                         <CardContent>\n//                             {obj.request.author.name} 님의 {obj.request.category}<br/>\n//                             <Counter data={obj.request} />\n//                         </CardContent>\n//                     </Card>\n//                 </Grid>\n//             )\n//         })\n\n//         return (\n//             <div>\n//                 <h2>진행중인 거래</h2>\n//                 <Container>\n//                     {ChosenList.length === 0\n//                         ?\n//                         <h1 style={{ textAlign: 'center' }}>현재 진행중인 거래가 없습니다!</h1>\n//                         :\n//                         <Grid container spacing={4}>\n//                             {MyChosenList}\n//                         </Grid>\n//                     }\n//                 </Container>\n//                 <Divider style={{ marginTop: '30px' }} />\n//                 <h2>대기중인 거래</h2>\n//                 <Container>\n//                     {WaittingList.length === 0\n//                         ?\n//                         <h1 style={{ textAlign: 'center' }}>현재 대기중인 견적이 없습니다!</h1>\n//                         :\n//                         <Grid container spacing={4}>\n//                             {MyWaittingList}\n//                         </Grid>\n//                     }\n//                 </Container>\n//                 <Divider style={{ marginTop: '30px' }} />\n//                 <h2>거래내역</h2>\n//                 <TableContainer variant=\"outlined\" component={Paper}>\n//                     <Table>\n//                         <TableHead>\n//                             <TableRow>\n//                                 <TableCell>카테고리</TableCell>\n//                                 <TableCell align=\"center\">이름</TableCell>\n//                                 <TableCell align=\"center\">요청일</TableCell>\n//                                 <TableCell align=\"center\">상태</TableCell>\n//                             </TableRow>\n//                         </TableHead>\n//                         <TableBody>\n//                             {BidHistory}\n//                         </TableBody>\n//                     </Table>\n//                 </TableContainer>\n//             </div>\n\n//         )\n//     }\n\n// }\n\nexport default BidList;","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogContent } from '@material-ui/core';\n\n\nconst ProfileCarousel = ({ open, setOpen, src }) => {\n    return (\n        <Dialog\n            maxWidth=\"xl\"\n            open={open}\n            onClose={() => setOpen(false)}\n            onStart={() => setOpen(false)}\n        >\n            <img style={{ display: 'block', margin: 'auto' }} src={src} alt=\"portfolio\" />\n        </Dialog>\n    )\n}\n\nexport default ProfileCarousel\n\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Grid, DialogContent, DialogActions, GridList, GridListTile, TextField, IconButton, GridListTileBar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { blue } from '@material-ui/core/colors';\nimport { EDIT_MY_PROFILE } from '../../lib/queries';\nimport { useMutation } from '@apollo/client';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from \"react-dropzone\";\nimport ProfileCarousel from './ProfileCarousel';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[700],\n    },\n    buttonStyle: {\n        width: '100%'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    avatarBig: {\n        backgroundColor: blue[100],\n        color: blue[700],\n        width: '150px',\n        height: '150px',\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n            'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n        color: 'white',\n    },\n    inputStyle: {\n        width: '50px',\n        height: '20px',\n    }\n}));\n\nconst ProfileEdit = ({ profile, onClose, open, user_id, profileClose }) => {\n\n    const classes = useStyles();\n\n    const handleClose = () => {\n        onClose();\n    }\n\n    const [imageOpen, setImageOpen] = useState(false);\n\n    const [image, setImage] = useState('');\n\n    const onClickImageOpen = (src) => {\n        setImage(src);\n        setImageOpen(true);\n    }\n\n    const [profileImage, setProfileImage] = useState('');\n\n    const [profilePreview, setProfilePreview] = useState(profile.profileImage);\n\n    const [exampleImages, setExampleImages] = useState([]);\n\n    const [examplePreview, setExamplePreview] = useState([]);\n\n    const [exPreview, setExPreview] = useState(profile.exampleImages);\n\n    const [text, setText] = useState(profile.text);\n\n    const [phone, setPhone] = useState(profile.phone)\n\n    const [phoneInput, setPhoneInput] = useState({\n        phone1: '',\n        phone2: '',\n        phone3: '',\n    });\n\n    const [savaProfile, { loading, data }] = useMutation(EDIT_MY_PROFILE)\n\n    const onChangeText = (e) => {\n        setText(e.target.value);\n    }\n\n    const onChangePhone = (e) => {\n        setPhoneInput({\n            ...phoneInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    const handleSaveProfile = () => {\n        savaProfile({\n            variables: {\n                input: {\n                    user: user_id,\n                    phone: phone,\n                    text: text\n                }\n            }\n        });\n        onClickAxios();\n    }\n\n    const onClickAxios = async () => {\n        let formData = new FormData(); //객체\n        const config = { //config 객체\n            header: { \"content-type\": \"multipart/form-data\" },\n        };\n        formData.append('user', user_id);\n        if (profileImage) {\n            formData.append(\"profileImage\", profileImage);\n        } else {\n            formData.append(\"profilePreview\", profilePreview);\n        }\n\n        if (exPreview) {\n            exPreview.map((obj) => {\n                formData.append(\"exPreview\", obj);\n            })\n        }\n        if (exampleImages) {\n            exampleImages.map((obj) => {\n                formData.append(\"exampleImages\", obj);\n            })\n        }\n        Axios.post('http://localhost:4000/image', formData, config)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    const onChnageProfileImage = (e) => {\n        setProfileImage(e.target.files[0]);\n        let files = e.target.files\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            setProfilePreview(e.target.result)\n        }\n        if (files.length !== 0) {\n            console.log(files);\n            reader.readAsDataURL(files[0])\n        }\n    }\n\n    const imageRead = (obj) => {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            setExamplePreview((examplePreview) => {\n                return [\n                    ...examplePreview,\n                    {\n                        src: e.target.result,\n                        obj: obj,\n                    }\n                ]\n            })\n        }\n        reader.readAsDataURL(obj);\n    }\n\n    const onChangeImage = (e) => {\n        const files = e.target.files\n        const filesLength = files.length;\n        // setExampleImages(files);\n        for (let i = 0; i < filesLength; i++) {\n            setExampleImages((exampleImages) => {\n                return [...exampleImages, files[i]]\n            });\n            imageRead(files[i]);\n        }\n        console.log(exampleImages);\n    }\n\n    const onClickDeleteImage = (obj) => {\n        setExampleImages(exampleImages.filter((x) => {\n            return obj !== x;\n        }))\n        setExamplePreview(examplePreview.filter((x) => {\n            return obj !== x.obj;\n        }))\n    }\n\n    const onClicDeleteExPreview = (ex) => {\n        setExPreview(exPreview.filter((x) => {\n            return ex !== x;\n        }))\n        console.log(exPreview);\n    }\n\n    const showExamplePreview = examplePreview.map((obj, index) => {\n        return (\n            <GridListTile key={index} >\n                <img src={obj.src} onClick={() => { onClickImageOpen(obj.src) }} />\n                <GridListTileBar\n                    titlePosition=\"bottom\"\n                    actionIcon={\n                        <IconButton className={classes.icon} onClick={() => { onClickDeleteImage(obj.obj) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    actionPosition=\"right\"\n                    className={classes.titleBar}\n                />\n            </GridListTile>\n        )\n    })\n\n    const showExPreview = exPreview.map((obj, index) => {\n        return (\n            <GridListTile key={index} >\n                <img src={obj} onClick={() => { onClickImageOpen(obj) }} />\n                <GridListTileBar\n                    titlePosition=\"bottom\"\n                    actionIcon={\n                        <IconButton className={classes.icon} onClick={() => { onClicDeleteExPreview(obj) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    actionPosition=\"right\"\n                    className={classes.titleBar}\n                />\n            </GridListTile>\n        )\n    })\n\n\n    useEffect(() => {\n        if (data) {\n            if (data.editMyProfile) {\n                alert('저장 완료!');\n                handleClose();\n                profileClose();\n            } else {\n                alert('저장 실패! 다시 시도해 주세요.')\n            }\n        }\n    }, [data])\n\n    useEffect(() => {\n        if(phoneInput.phone1 || phoneInput.phone2 || phoneInput.phone3){\n            setPhone(`${phoneInput.phone1}-${phoneInput.phone2}-${phoneInput.phone3}`);\n        }\n    }, [phoneInput])\n\n\n    return (\n        <>\n            {loading\n                ?\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                :\n                <Dialog fullWidth={true} maxWidth=\"sm\" onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open}>\n                    <DialogTitle id=\"simple-dialog-title\">\n                        <Grid container>\n                            <Grid item xs={1}>\n                                {profilePreview === ''\n                                    ?\n                                    <Avatar className={classes.avatar}>\n                                        <PersonIcon />\n                                    </Avatar>\n                                    :\n                                    <Avatar className={classes.avatar} src={profilePreview} />\n                                }\n                            </Grid>\n                            <Grid item xs={11}>\n                                <div style={{ display: \"inline-block\", marginTop: \"5px\", marginLeft: \"5px\" }}>내 프로필 설정</div>\n                            </Grid>\n                        </Grid>\n                    </DialogTitle>\n                    <DialogContent>\n                        <h3 style={{ margin: '0px' }}>프로필 사진</h3>\n                        <small>나를 나타내는 사진을 올려주세요.</small>\n                        <br /><br />\n                        <label htmlFor='imageupload' style={{ display: 'inline-block' }}>\n                            {profilePreview === ''\n                                ?\n                                <Avatar className={classes.avatarBig}>\n                                    <PersonIcon style={{ fontSize: 80 }} />\n                                </Avatar>\n                                :\n                                <Avatar className={classes.avatarBig} src={profilePreview} />\n                            }\n                            <input type='file' id='imageupload' onChange={onChnageProfileImage} accept=\"image/*\" style={{ display: 'none' }} />\n                        </label>\n                        <br /><br />\n                        <h3 style={{ margin: '0px' }}>프로젝트 사진</h3>\n                        <small>자신이 완성한 프로젝트 사진을 올려주세요. 구매자의 선택에 도움이 됩니다.</small><br />\n                        <input type=\"file\" onChange={onChangeImage} multiple accept=\"image/*\" />\n                        <div className={classes.root}>\n                            <GridList className={classes.gridList} cols={2.5}>\n                                {showExPreview}\n                                {showExamplePreview}\n                            </GridList>\n                        </div>\n                        <br />\n                        <h3 style={{ marginBottom: '0px' }}>상세 설명</h3>\n                        <small>자기 소개나 사진에 대한 설명을 적어주세요.</small><br /><br />\n                        <TextField\n                            multiline\n                            defaultValue={text}\n                            variant=\"outlined\"\n                            onChange={onChangeText}\n                            style={{ width: \"100%\" }}\n                        />\n                        <h3 style={{ marginBottom: '0px' }}>휴대전화</h3>\n                        <small>구매자와 연락을 할 수 있도록 휴대전화 번호를 적어주세요.</small><br /><br />\n                        <input className={classes.inputStyle} name=\"phone1\" onChange={onChangePhone} />\n                        -\n                        <input className={classes.inputStyle} name=\"phone2\" onChange={onChangePhone} />\n                        -\n                        <input className={classes.inputStyle} name=\"phone3\" onChange={onChangePhone} />\n                        <br /><br />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleSaveProfile} variant=\"contained\" className={classes.buttonStyle}>저장</Button>\n                        <Button onClick={handleClose} variant=\"contained\" className={classes.buttonStyle}>취소</Button>\n                    </DialogActions>\n                    <ProfileCarousel open={imageOpen} setOpen={setImageOpen} src={image} />\n                </Dialog>\n            }\n        </>\n    )\n}\n\n\n\n\n// const ProfileEdit = ({ profile, onClose, open, user_id, profileClose }) => {\n\n//     const classes = useStyles();\n\n//     const handleClose = () => {\n//         onClose();\n//     }\n\n//     const [imageOpen, setImageOpen] = useState(false);\n\n//     const [image, setImage] = useState('');\n\n//     const onClickImageOpen = (src) => {\n//         setImage(src);\n//         setImageOpen(true);\n//     }\n\n//     const [profileImage, setProfileImage] = useState('');\n\n//     const [profilePreview, setProfilePreview] = useState(profile.profileImage);\n\n//     const [exampleImages, setExampleImages] = useState([]);\n\n//     const [examplePreview, setExamplePreview] = useState([]);\n\n//     const [exPreview, setExPreview] = useState(profile.exampleImages);\n\n//     const [text, setText] = useState('');\n\n//     const [phone, setPhone] = useState('');\n\n//     const onChangeText = (e) => {\n//         setText(e.target.value);\n//     }\n\n//     const onChangePhone = (e) => {\n//         setPhone(e.target.value);\n//     }\n\n//     const [loading, setLoading] = useState(false);\n\n//     const onClickAxios = async () => {\n//         setLoading(true);\n//         let formData = new FormData(); //객체\n//         const config = { //config 객체\n//             header: { \"content-type\": \"multipart/form-data\" },\n//         };\n\n//         formData.append('phone',phone);\n//         formData.append('text',text);\n//         formData.append('user', user_id);\n\n//         if (profileImage) {\n//             formData.append(\"profileImage\", profileImage);\n//         } else {\n//             formData.append(\"profilePreview\", profilePreview);\n//         }\n\n//         if (exPreview) {\n//             exPreview.map((obj) => {\n//                 formData.append(\"exPreview\", obj);\n//             })\n//         }\n//         if (exampleImages) {\n//             exampleImages.map((obj) => {\n//                 formData.append(\"exampleImages\", obj);\n//             })\n//         }\n//         Axios.post('/profile', formData, config)\n//             .then(res => {\n//                 setLoading(false);\n//                 alert(res.data);\n//                 handleClose();\n//                 profileClose();\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             })\n//     }\n\n//     const handleSaveProfile = () => {\n//         onClickAxios();\n//     }\n\n//     const onChnageProfileImage = (e) => {\n//         setProfileImage(e.target.files[0]);\n//         let files = e.target.files\n//         let reader = new FileReader();\n//         reader.onload = (e) => {\n//             setProfilePreview(e.target.result)\n//         }\n//         if (files.length !== 0) {\n//             console.log(files);\n//             reader.readAsDataURL(files[0])\n//         }\n//     }\n\n//     const imageRead = (obj) => {\n//         let reader = new FileReader();\n//         reader.onload = (e) => {\n//             setExamplePreview((examplePreview) => {\n//                 return [\n//                     ...examplePreview,\n//                     {\n//                         src: e.target.result,\n//                         obj: obj,\n//                     }\n//                 ]\n//             })\n//         }\n//         reader.readAsDataURL(obj);\n//     }\n\n//     const onChangeImage = (e) => {\n//         const files = e.target.files\n//         const filesLength = files.length;\n//         // setExampleImages(files);\n//         for (let i = 0; i < filesLength; i++) {\n//             setExampleImages((exampleImages) => {\n//                 return [...exampleImages, files[i]]\n//             });\n//             imageRead(files[i]);\n//         }\n//         console.log(exampleImages);\n//     }\n\n//     const onClickDeleteImage = (obj) => {\n//         setExampleImages(exampleImages.filter((x) => {\n//             return obj !== x;\n//         }))\n//         setExamplePreview(examplePreview.filter((x) => {\n//             return obj !== x.obj;\n//         }))\n//     }\n\n//     const onClicDeleteExPreview = (ex) => {\n//         setExPreview(exPreview.filter((x) => {\n//             return ex !== x;\n//         }))\n//         console.log(exPreview);\n//     }\n\n//     const showExamplePreview = examplePreview.map((obj, index) => {\n//         return (\n//             <GridListTile key={index} >\n//                 <img src={obj.src} onClick={() => { onClickImageOpen(obj.src) }} />\n//                 <GridListTileBar\n//                     titlePosition=\"bottom\"\n//                     actionIcon={\n//                         <IconButton className={classes.icon} onClick={() => { onClickDeleteImage(obj.obj) }}>\n//                             <DeleteIcon />\n//                         </IconButton>\n//                     }\n//                     actionPosition=\"right\"\n//                     className={classes.titleBar}\n//                 />\n//             </GridListTile>\n//         )\n//     })\n\n//     const showExPreview = exPreview.map((obj, index) => {\n//         return (\n//             <GridListTile key={index} >\n//                 <img src={obj} onClick={() => { onClickImageOpen(obj) }} />\n//                 <GridListTileBar\n//                     titlePosition=\"bottom\"\n//                     actionIcon={\n//                         <IconButton className={classes.icon} onClick={() => { onClicDeleteExPreview(obj) }}>\n//                             <DeleteIcon />\n//                         </IconButton>\n//                     }\n//                     actionPosition=\"right\"\n//                     className={classes.titleBar}\n//                 />\n//             </GridListTile>\n//         )\n//     })\n\n\n//     return (\n//         <>\n//             {loading\n//                 ?\n//                 <Backdrop className={classes.backdrop} open={loading}>\n//                     <CircularProgress color=\"inherit\" />\n//                 </Backdrop>\n//                 :\n//                 <Dialog fullWidth={true} maxWidth=\"sm\" onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open}>\n//                     <DialogTitle id=\"simple-dialog-title\">\n//                         <Grid container>\n//                             <Grid item xs={1}>\n//                                 {profilePreview === ''\n//                                     ?\n//                                     <Avatar className={classes.avatar}>\n//                                         <PersonIcon />\n//                                     </Avatar>\n//                                     :\n//                                     <Avatar className={classes.avatar} src={profilePreview} />\n//                                 }\n//                             </Grid>\n//                             <Grid item xs={11}>\n//                                 <div style={{ display: \"inline-block\", marginTop: \"5px\", marginLeft: \"5px\" }}>내 프로필 설정</div>\n//                             </Grid>\n//                         </Grid>\n//                     </DialogTitle>\n//                     <DialogContent>\n//                         <h3 style={{ margin: '0px' }}>프로필 사진</h3>\n//                         <small>나를 나타내는 사진을 올려주세요.</small>\n//                         <br /><br />\n//                         <label htmlFor='imageupload' style={{ display: 'inline-block' }}>\n//                             {profilePreview === ''\n//                                 ?\n//                                 <Avatar className={classes.avatarBig}>\n//                                     <PersonIcon style={{ fontSize: 80 }} />\n//                                 </Avatar>\n//                                 :\n//                                 <Avatar className={classes.avatarBig} src={profilePreview} />\n//                             }\n//                             <input type='file' id='imageupload' onChange={onChnageProfileImage} accept=\"image/*\" style={{ display: 'none' }} />\n//                         </label>\n//                         <br /><br />\n//                         <h3 style={{ margin: '0px' }}>프로젝트 사진</h3>\n//                         <small>자신이 완성한 프로젝트 사진을 올려주세요. 구매자의 선택에 도움이 됩니다.</small>\n//                         <input type=\"file\" onChange={onChangeImage} multiple accept=\"image/*\" />\n//                         <div className={classes.root}>\n//                             <GridList className={classes.gridList} cols={2.5}>\n//                                 {showExPreview}\n//                                 {showExamplePreview}\n//                             </GridList>\n//                         </div>\n//                         <br />\n//                         <h3 style={{ marginBottom: '0px' }}>상세 설명</h3>\n//                         <small>자기 소개나 사진에 대한 설명을 적어주세요.</small>\n//                         <TextField\n//                             multiline\n//                             variant=\"outlined\"\n//                             onChange={onChangeText}\n//                             style={{ width: \"100%\" }}\n//                         />\n//                         <h3 style={{ marginBottom: '0px' }}>휴대전화</h3>\n//                         <small>구매자와 연락을 할 수 있도록 휴대전화 번호를 적어주세요. 하이픈(\"-\")제외</small>\n//                         <TextField\n//                             style={{ width: \"100%\" }}\n//                             variant=\"outlined\"\n//                             onChange={onChangePhone}\n//                         />\n//                         <br />\n//                     </DialogContent>\n//                     <DialogActions>\n//                         <Button onClick={handleSaveProfile} variant=\"contained\" className={classes.buttonStyle}>저장</Button>\n//                         <Button onClick={handleClose} variant=\"contained\" className={classes.buttonStyle}>취소</Button>\n//                     </DialogActions>\n//                     <ProfileCarousel open={imageOpen} setOpen={setImageOpen} src={image} />\n//                 </Dialog>\n//             }\n//         </>\n//     )\n// }\n\nexport default ProfileEdit\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport { Grid, DialogContent, DialogActions, GridList, GridListTile, TextField, Typography } from '@material-ui/core';\nimport ProfileCarousel from './ProfileCarousel';\nimport Rating from '@material-ui/lab/Rating';\nimport ProfileEdit from './ProfileEdit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[700],\n    },\n    buttonStyle: {\n        width: '100%'\n    }\n}));\n\nconst Profile = ({ profile, onClose, open, user_id }) => {\n\n    const classes = useStyles();\n    const userName = useSelector(state => state.userAction.userName);\n    const [imageOpen, setImageOpen] = useState(false);\n    const [editOpen, setEditOpen] = useState(false);\n    const [image, setImage] = useState('');\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const onEditClose = () => {\n        setEditOpen(false);\n    }\n\n    const onClickImageOpen = (src) => {\n        setImage(src);\n        setImageOpen(true);\n    }\n\n\n    const reviewList = profile.reviews.map((obj, index) => {\n        return (\n            <ListItem key={index}>\n                <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                        <PersonIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                    {obj.name}님의 평가\n                    <Rating name=\"half-rating-read\" value={obj.rating} precision={0.5} readOnly /><br />\n                    {obj.text}\n                </ListItemText>\n            </ListItem>\n        )\n    })\n\n    return (\n        <Dialog fullWidth={true} maxWidth=\"sm\" onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">\n                <Grid container>\n                    <Grid item xs={1}>\n                        {profile.profileImage !== ''\n                            ?\n                            <Avatar className={classes.avatar} src={profile.profileImage} />\n                            :\n                            <Avatar className={classes.avatar}>\n                                <PersonIcon />\n                            </Avatar>\n                        }\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Typography variant=\"h6\" color=\"textPrimary\" style={{ display: \"inline-block\", marginTop: \"5px\", marginLeft: \"5px\" }}>\n                            {profile.user.name}님의 프로필\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </DialogTitle>\n            <DialogContent>\n                <div className={classes.root}>\n                    {profile.exampleImages.length !== 0\n                        ?\n                        profile.exampleImages.length === 1\n                        ?\n                        <img src={profile.exampleImages[0]} alt=\"123123\" onClick={() => { onClickImageOpen(profile.exampleImages[0]) }}/>\n                        :\n                        <GridList className={classes.gridList} cols={2.5}>\n                            {profile.exampleImages.map((obj, index) => {\n                                return (\n                                    <GridListTile key={index} onClick={() => { onClickImageOpen(obj) }}>\n                                        <img src={obj} />\n                                    </GridListTile>\n                                )\n                            })}\n                        </GridList>\n                        :\n                        <textPrimary style={{ textAlign: 'center', marginTop: '60px' }}>No Image</textPrimary>\n                    }\n                </div>\n                <br />\n                <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>소개 및 설명</Typography>\n                {profile.text !== ''\n                    ?\n                    <TextField\n                        multiline\n                        variant=\"outlined\"\n                        InputProps={{ readOnly: true }}\n                        value={profile.text}\n                        style={{ width: \"100%\" }}\n                    />\n                    :\n                    <TextField\n                        multiline\n                        variant=\"outlined\"\n                        InputProps={{ readOnly: true }}\n                        value=\"등록된 설명이 없습니다.\"\n                        style={{ width: \"100%\" }}\n                    />\n                }\n                <br/><br/>\n                <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom style={{ display: 'inline-block' }}>이용자 리뷰</Typography>\n                {reviewList.length !== 0\n                    ?\n                    <>\n                        <Rating name=\"half-rating-read\" value={1} precision={0.5} readOnly />\n                        <List>\n                            {reviewList}\n                        </List>\n                    </>\n                    :\n                    <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom style={{ textAlign: 'center' }}>등록된 리뷰가 없습니다.</Typography>\n                }\n                <ProfileCarousel open={imageOpen} setOpen={setImageOpen} src={image} />\n                <ProfileEdit profile={profile} onClose={onEditClose} open={editOpen} user_id={user_id} profileClose={handleClose} />\n            </DialogContent>\n            {userName === profile.user.name\n                ?\n                <DialogActions>\n                    <Button onClick={()=>{setEditOpen(true)}} variant=\"contained\" className={classes.buttonStyle}>프로필 설정</Button>\n                </DialogActions>\n                :\n                <>\n                </>\n            }\n        </Dialog>\n    )\n}\n\nexport default Profile\n","import React, { useEffect } from 'react'\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_MY_PROFILE } from '../../lib/queries';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Profile from './Profile';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\n\nconst ProfileModal = ({ onClose, open, user_id }) => {\n\n    const classes = useStyles();\n\n\n    const [getProfile, { loading, data, called, error }] = useLazyQuery(GET_MY_PROFILE, {\n        variables: {\n            user: user_id\n        },\n        fetchPolicy: 'cache-and-network',\n    })\n\n\n    useEffect(() => {\n        if (open) {\n            getProfile();\n        }\n    }, [open, data])\n\n    if (error) {\n        console.log('에러에러에러에러에러', error);\n    }\n\n    if (loading) {\n        return (\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        )\n    }\n\n    if (!called) {\n        return <></>\n    }\n\n    if (called && !loading) {\n        return (\n            <Profile profile={data.getMyProfile} onClose={onClose} open={open} user_id={user_id} />\n        )\n    }\n\n\n}\n\n// const ProfileModal = ({ onClose, open, user_id }) => {\n\n//     const classes = useStyles();\n//     const [data, setData] = useState();\n//     const [loading, setLoading] = useState(true);\n\n//     const getMyProfile = () => {\n//         Axios.get('/my-profile',{\n//             user : user_id,\n//         })\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n\n//     useEffect(() => {\n//         if (open) {\n//             getMyProfile();\n//         }\n//     }, [open])\n\n//     if (loading) {\n//         return (\n//             <Backdrop className={classes.backdrop} open={loading}>\n//                 <CircularProgress color=\"inherit\" />\n//             </Backdrop>\n//         )\n//     }\n\n//     if (!loading) {\n//         return (\n//             <Profile profile={data} onClose={onClose} open={open} user_id={user_id} />\n//         )\n//     }\n\n\n// }\n\n\nexport default ProfileModal\n","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport BidList from './BidList';\nimport { Grid, Container, Divider, Avatar, makeStyles, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ProfileModal from '../../../components/Profile/ProfileModal';\nimport { GET_MY_PROFILE_IMAGE } from '../../../lib/queries';\nimport { useQuery } from '@apollo/client';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst useStyle = makeStyles((theme) => ({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n        color: 'rgb(104,104,106)',\n    },\n    avatarStyle: {\n        margin: 'auto',\n        width: '180px',\n        height: '180px',\n        backgroundColor: 'rgb(104,104,106)',\n        border: 'none',\n    },\n    gridStyle: {\n        textAlign: 'center',\n        marginRight: '30px',\n    },\n    buttonStyle: {\n        width: '100%',\n        margin: '1px'\n    }\n}))\n\n\n\nconst MyPage = () => {\n    const classes = useStyle();\n    const userName = localStorage.getItem('userName');\n    const user_id = localStorage.getItem('user_id')\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const { data } = useQuery(GET_MY_PROFILE_IMAGE, {\n        variables: {\n            user: user_id,\n        },\n        fetchPolicy: 'cache-and-network',\n    })\n\n    return (\n        <Container className={classes.heroContent}>\n            <Grid container>\n                <Grid className={classes.gridStyle} item xs={2}>\n                    {data &&\n                        data.getMyProfile.profileImage\n                        ?\n                        <Avatar className={classes.avatarStyle} src={data.getMyProfile.profileImage} />\n                        :\n                        <Avatar className={classes.avatarStyle}>\n                            <PersonIcon style={{ fontSize: 100 }} />\n                        </Avatar>\n                    }\n                    <br />\n                    <Typography variant=\"h5\" gutterBottom>{userName}</Typography>\n                    <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/seller/mypage'>\n                        판매 정보\n                    </Button>\n                    <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/user/mypage'>\n                        구매 정보\n                    </Button>\n                    <Button className={classes.buttonStyle} variant=\"outlined\" onClick={handleClickOpen}>\n                        나의 프로필\n                    </Button>\n                    <br />\n                </Grid>\n                <Grid item xs={9}>\n                    <Route exact path='/seller/mypage' component={BidList} />\n                </Grid>\n                <ProfileModal name={userName} open={open} onClose={handleClose} user_id={user_id} />\n            </Grid>\n        </Container>\n\n\n    )\n\n}\n\n// const MyPage = () => {\n\n//     const userName = localStorage.getItem('userName');\n//     const user_id = localStorage.getItem('user_id')\n//     const [open, setOpen] = React.useState(false);\n\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n\n//     const { data } = useQuery(GET_MY_PROFILE_IMAGE, {\n//         variables: {\n//             user: user_id,\n//         },\n//         fetchPolicy: 'cache-and-network',\n//     })\n\n//     const [data, setData] = useState('');\n//     const [loading, setLoading] = useState(true);\n\n//     const getMyProfileImage = () => {\n//         Axios.get('/my-profile-image',{\n//             user : user_id\n//         })\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     const avatarStyle = { \n//         margin:'auto',\n//         width: '180px',\n//         height: '180px',\n//     }\n\n//     useEffect(()=>{\n//         getMyProfileImage();\n//     },[])\n\n//     return (\n//         <Grid style={{ marginTop: '2px' }} container spacing={1}>\n//             <Grid style={{ textAlign: 'center', marginRight: '10px' }} item xs={2}>\n//                 {!loading\n//                     &&\n//                     <Avatar style={avatarStyle}>\n//                         {data.profileImage\n//                             ?\n//                             <img src={data.profileImage} alt=\"avatar\" />\n//                             :\n//                             <PersonIcon style={{ fontSize: 100 }} />\n//                         }\n//                     </Avatar>\n//                 }\n//                 <h3>{userName}</h3>\n//                 <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/seller/mypage'>\n//                     판매 정보\n//                     </Button>\n//                 <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/user/mypage'>\n//                     구매 정보\n//                     </Button>\n//                 <Button className={classes.buttonStyle} variant=\"outlined\" onClick={handleClickOpen}>\n//                     나의 프로필\n//                     </Button>\n//                 <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/seller/mypage/chat'>\n//                     채팅 상담\n//                     </Button>\n//                 <br />\n//             </Grid>\n//             <Divider orientation=\"vertical\" flexItem />\n//             <Grid style={{ marginLeft: '15px' }} item xs={9}>\n//                 <Route exact path='/seller/mypage' component={BidList} />\n//                 <Route path='/seller/mypage/chat' component={Chat} exact />\n//                 <Route path='/seller/mypage/chat/:id' component={ChatBox} exact />\n//             </Grid>\n//             <ProfileModal name={userName} open={open} onClose={handleClose} user_id={user_id} />\n//         </Grid>\n//     )\n\n// }\n\nexport default MyPage;","import MyPage from './Mypage';\n\nexport default MyPage;","import Main from './Main';\n\nexport default Main;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport RequestMain from './Request/RequestMain';\nimport RequestDetail from './Request/RequestDetail';\nimport SellerHome from './SellerHome';\nimport MyPage from './MyPage';\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/seller' component={SellerHome} />\n            <Route exact path='/seller/request' component={RequestMain} />\n            <Route path='/seller/request/:id' component={RequestDetail} />\n            <Route path='/seller/mypage' component={MyPage}/>\n        </Switch>\n    )\n}\n\nexport default Main\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport BuildIcon from '@material-ui/icons/Build';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport { TextField, InputAdornment, OutlinedInput, Paper, Typography, Tooltip, Card } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport LabelIcon from '@material-ui/icons/Label';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RequestCard from '../../../components/RequestCard';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n    rootList: {\n        marginTop: theme.spacing(5),\n        width: '100%',\n        maxWidth: 500,\n        margin: 'auto',\n    },\n    backgroundStyle: {\n        backgroundColor: 'white',\n    }\n}));\n\nconst categories = [\n    {\n        id: 0,\n        value: '앱 개발'\n    },\n    {\n        id: 1,\n        value: '웹 개발'\n    },\n    {\n        id: 2,\n        value: '소프트웨어 개발'\n    },\n    {\n        id: 3,\n        value: '유지보수'\n    }\n];\n\nconst deadLines = [\n    {\n        id: 0,\n        value: '1시간'\n    },\n    {\n        id: 1,\n        value: '3시간'\n    },\n    {\n        id: 2,\n        value: '6시간'\n    },\n    {\n        id: 3,\n        value: '12시간'\n    },\n    {\n        id: 4,\n        value: '18시간'\n    },\n    {\n        id: 5,\n        value: '24시간'\n    }\n];\n\nfunction EnrollList({ stepIndex, handleEnrollData }) {\n\n    const classes = useStyles();\n\n    const [categoryInput, setCategoryInput] = useState({\n        category: '',\n        categoryIndex: null,\n    });\n\n    const { category, categoryIndex } = categoryInput;\n\n    const [deadLineInput, setDeadLineInput] = useState({\n        deadLine: '',\n        deadLineIndex: null,\n    });\n\n    const { deadLine, deadLineIndex } = deadLineInput;\n\n    const [hopeDateInput, setHopeDateInput] = useState({\n        hopeDate: '',\n        hopeDateIndex: null,\n    });\n\n    const { hopeDate, hopeDateIndex } = hopeDateInput;\n\n    const onChangeTime = (index, value) => {\n        const now = new Date()\n        let str = value.slice(0, -2);\n        let end = now.setHours(now.getHours() + Number(str));\n        setDeadLineInput({\n            deadLine: end,\n            deadLineIndex: index,\n        });\n        handleEnrollData('deadLine', end)\n    }\n\n    const onChangeCategory = (index, value) => {\n        setCategoryInput({\n            category: value,\n            categoryIndex: index\n        });\n        handleEnrollData('category', value)\n    };\n\n    const onChangeHopeDate = (index, value) => {\n        setHopeDateInput({\n            hopeDate: value,\n            hopeDateIndex: index\n        });\n        handleEnrollData('hopeDate', value)\n    };\n\n\n    const [tag, setTag] = useState('');\n\n    const [tagList, setTagList] = useState([]);\n\n    const onChangeTag = (e) => {\n        setTag(e.target.value);\n    }\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        if (tag === '') {\n            return;\n        } else {\n            setTagList([\n                ...tagList,\n                tag\n            ])\n            handleEnrollData('tags', [\n                ...tagList,\n                tag\n            ])\n            setTag('');\n        }\n    }\n\n    const onClickRemove = (index) => {\n        const list = tagList.filter((obj, x) => {\n            return x !== index;\n        })\n        setTagList(list)\n    }\n\n    const showTagList = tagList.map((obj, index) => {\n        return <span key={index}><Chip label={obj} variant=\"outlined\" size=\"small\" onDelete={() => { onClickRemove(index) }} />&nbsp;</span>\n    })\n\n    const [detail, setDetail] = useState('');\n\n    const onChangeDetail = (e) => {\n        setDetail(e.target.value);\n        handleEnrollData('detail', e.target.value);\n    }\n\n\n    const printList = (arr, index, fnc) => {\n        return (\n            <Paper elevation={3}>\n                <List className={classes.backgroundStyle} component=\"nav\" aria-label=\"main mailbox folders\">\n                    {arr.map((obj) => {\n                        return (\n                            <div key={obj.id}>\n                                <Slide timeout={100 * obj.id} direction=\"left\" in={true} mountOnEnter unmountOnExit>\n                                    <ListItem button selected={index === obj.id} onClick={() => fnc(obj.id, obj.value)}>\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                checked={index === obj.id}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary={obj.value} />\n                                    </ListItem>\n                                </Slide>\n                            </div>\n                        )\n                    })}\n                </List>\n            </Paper>\n        )\n    }\n\n    switch (stepIndex) {\n        case 0:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\"><BuildIcon /> 무엇을 만들고 싶으신가요?</Typography>\n                    <br />\n                    {category}\n                    <br /><br />\n                    {printList(categories, categoryIndex, onChangeCategory)}\n                </div>\n            )\n        case 1:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\" gutterBottom><QueryBuilderIcon /> 경매 시간을 설정해주세요.</Typography>\n                    <Typography paragraph>\n                        설정하신 시간 동안 전문가들이 입찰할 것입니다!\n                    </Typography>\n                    {deadLine === '' ? <></> : <p>경매 마감 일시: {new Date(deadLine).toLocaleString()}</p>}\n                    {printList(deadLines, deadLineIndex, onChangeTime)}\n                </div>\n            )\n        case 2:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\" gutterBottom><CalendarTodayIcon /> 희망 작업 완료일을 선택해주세요.</Typography>\n                    <Typography paragraph>{hopeDate}</Typography>\n                    <Typography paragraph>\n                        전문가와 협의도 가능합니다!\n                    </Typography>\n                    <Paper elevation={3}>\n                        <List className={classes.backgroundStyle} component=\"nav\" aria-label=\"main mailbox folders\">\n                            <Slide timeout={200} direction=\"left\" in={true} mountOnEnter unmountOnExit>\n                                <ListItem button selected={hopeDateIndex === 0} onClick={() => onChangeHopeDate(0, '전문가와 협의')}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            checked={hopeDateIndex === 0}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary='전문가와 협의' />\n                                </ListItem>\n                            </Slide>\n                            <Slide timeout={300} direction=\"left\" in={true} mountOnEnter unmountOnExit>\n                                <ListItem button selected={hopeDateIndex === 1} onClick={() => onChangeHopeDate(1)}>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            checked={hopeDateIndex === 1}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary='날짜 선택' />\n                                    {hopeDateIndex === 1\n                                        ? <TextField\n                                            id=\"date\"\n                                            label=\"date\"\n                                            type=\"date\"\n                                            defaultValue={new Date().toDateString()}\n                                            className={classes.textField}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            onChange={(e) => {\n                                                if (new Date(e.target.value) < new Date()) {\n                                                    alert('이미 지난 날짜입니다. 다시 선택해 주세요')\n                                                } else {\n                                                    onChangeHopeDate(1, e.target.value)\n                                                }\n                                            }}\n                                        />\n                                        : <></>\n                                    }\n                                </ListItem>\n                            </Slide>\n                        </List>\n                    </Paper>\n                </div>\n            )\n        case 3:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\" gutterBottom><LabelIcon /> 아이디어가 있으신가요?</Typography>\n                    <Typography paragraph>\n                        아이디어의 키워드를 태그형식으로 입력해주세요!<br />\n                        잘 모르겠다면 입력하지 않아도 괜찮습니다.\n                    </Typography>\n                    예시 : <Chip label=\"쇼핑몰\" variant=\"outlined\" size=\"small\" />&nbsp;\n                    <Chip label=\"어플리케이션\" variant=\"outlined\" size=\"small\" />&nbsp;\n                    <Chip label=\"안드로이드\" variant=\"outlined\" size=\"small\" />&nbsp;\n                    <Chip label=\"IOS\" variant=\"outlined\" size=\"small\" />\n                    <br />\n                    <br />\n                    <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit>\n                        <form onSubmit={onSubmitForm}>\n                            <OutlinedInput\n                                fullWidth\n                                style={{ backgroundColor: 'white' }}\n                                size=\"small\"\n                                placeholder=\"한 단어씩 입력해주세요!\"\n                                value={tag}\n                                autoFocus\n                                endAdornment={<InputAdornment position=\"end\">ENTER</InputAdornment>}\n                                onChange={onChangeTag} />\n                            <br /><br />\n                        </form>\n                    </Slide>\n                    {showTagList}<br /><br />\n                </div>\n            )\n        case 4:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\" gutterBottom><AddCircleOutlineIcon /> 조금 더 자세한 설명을 적어주세요!</Typography>\n                    <Typography paragraph>\n                        전문가들의 이해를 도와줄 설명이 필요해요.\n                        <br />\n                        잘 모르겠다면 전문가와 상담이라고 적어주세요.\n                    </Typography>\n                    <Slide timeout={200} direction=\"left\" in={true} mountOnEnter unmountOnExit>\n                        <TextField id=\"outlined-multiline-static\"\n                            label=\"구상하신 아이디어의 상세한 설명이 필요해요!\"\n                            style={{ backgroundColor: 'white' }}\n                            multiline\n                            rows={5}\n                            variant=\"outlined\"\n                            fullWidth\n                            value={detail}\n                            onChange={onChangeDetail}\n                        />\n                    </Slide>\n                </div>\n            )\n        case 5:\n            return (\n                <div className={classes.rootList}>\n                    <Typography variant=\"h4\" gutterBottom>작성하신 견적서를 확인해주세요!</Typography>\n                    <br />\n                    <Card elevation={3}>\n                        <List>\n                            {[\n                                {\n                                    icon: () => <BuildIcon />,\n                                    title: '카테고리',\n                                    text: category !== '' ? category : '설정하지 않았습니다.'\n                                },\n                                {\n                                    icon: () => <QueryBuilderIcon />,\n                                    title: '요청 마감일',\n                                    text: deadLine !== '' ? new Date(deadLine).toLocaleString() : '설정하지 않았습니다.'\n                                },\n                                {\n                                    icon: () => <AddCircleOutlineIcon />,\n                                    title: '상세설명',\n                                    text: detail !== '' ? detail : '설정하지 않았습니다.'\n                                },\n                                {\n                                    icon: () => <LabelIcon />,\n                                    title: '태그',\n                                    text: tagList.map((obj) => {\n                                        return <span key={obj}><Chip variant=\"outlined\" size=\"small\" label={obj} />&nbsp;</span>\n                                    })\n                                },\n                                {\n                                    icon: () => <CalendarTodayIcon />,\n                                    title: '희망 제작 마감일',\n                                    text: hopeDate\n                                },\n                            ].map((obj, index) => {\n                                return (\n                                    <ListItem key={index}>\n                                        <ListItemIcon>\n                                            <Tooltip arrow title={obj.title}>\n                                                {obj.icon()}\n                                            </Tooltip>\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={obj.text}\n                                        />\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </Card>\n                </div>\n\n            )\n        default:\n            return 'Unknown stepIndex';\n    }\n}\n\nexport default EnrollList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\nexport default function AlertDialog({ open, onClickSendRequest, setOpen, loading }) {\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {loading\n        ?\n        <Backdrop className={classes.backdrop} open={loading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        :\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"전문가들에게 견적을 보내시겠습니까?\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              최대 10명의 전문가들이 입찰을 할 것입니다.<br />\n            선택하기 전에 전문가와 1:1 상담을 하실 수 있습니다.\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClickSendRequest} color=\"primary\" autoFocus>\n              보내기\n          </Button>\n            <Button onClick={handleClose} color=\"primary\">\n              취소\n          </Button>\n          </DialogActions>\n        </Dialog>\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars({open,setOpen}) {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar anchorOrigin={{ vertical:'top', horizontal:'center' }} open={open} autoHideDuration={2000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          빈 항목이 존재합니다!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AlertDialogSlide = ({open,setOpen,handleNext}) => {\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const agree = () => {\n    handleNext();\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"알림\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            태그를 입력하지 않았습니다.<br/>\n            넘어가시겠습니까?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={agree} color=\"primary\">\n            확인\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            취소\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialogSlide;","import React, { useState, useEffect } from 'react';\n// import Axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport EnrollList from './EnrollList';\nimport EnrollDialog from './EnrollDialog';\nimport EnrollAlert from './EnrollAlert';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { SEND_REQUEST } from '../../../lib/queries';\nimport { useMutation } from '@apollo/client';\nimport Axios from 'axios';\nimport ConfirmDialog from './ConfirmDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        textAlign: \"center\",\n        backgroundColor: 'transparent',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nfunction getSteps() {\n    return ['카테고리 설정', '마감 시간 설정', '희망 작업 완료일 설정', '태그 입력', '상세 설명 입력', '작성완료'];\n}\n\nconst EnrollStepper = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n\n    const [sendRequest, { loading, data }] = useMutation(SEND_REQUEST);\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        history.push('/user/mypage');\n    };\n\n    const [enrollData, setEnrollData] = useState({\n        category: '',\n        deadLine: '',\n        hopeDate: '',\n        detail: '',\n        tags: [],\n    })\n\n    const { category, deadLine, detail, hopeDate,tags } = enrollData;\n\n    const handleEnrollData = (name, value) => {\n        setEnrollData({\n            ...enrollData,\n            [name]: value\n        })\n    }\n\n    const [open, setOpen] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [confirmOpen, setConfirmOpen] = useState(false);\n\n    const onClickCheck = () => {\n        switch (activeStep) {\n            case 0:\n                if (category === '') {\n                    setAlertOpen(true);\n                } else {\n                    handleNext();\n                }\n                break;\n            case 1:\n                if (deadLine === '') {\n                    setAlertOpen(true);\n                } else {\n                    handleNext();\n                }\n                break;\n            case 2:\n                if (hopeDate === '') {\n                    setAlertOpen(true);\n                } else {\n                    handleNext();\n                }\n                break;\n            case 3:\n                if(tags.length === 0){\n                    setConfirmOpen(true);\n                } else {\n                    handleNext();\n                }\n                break;\n            case 4:\n                if(detail === ''){\n                    setAlertOpen(true);\n                } else {\n                    handleNext();\n                }\n                break;\n            case 5:\n                setOpen(true);\n                break;\n\n        }\n    }\n\n    const user_id = useSelector(state => state.userAction.user_id);\n\n    const onClickSendRequest = () => {\n        sendRequest({\n            variables: {\n                input: {\n                    author: user_id,\n                    ...enrollData,\n                }\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (data) {\n            console.log(data.sendRequest);\n            setOpen(false);\n            handleNext();\n        }\n    }, [data])\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper className={classes.root} activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <span className={classes.instructions}>\n                            <h1>작성완료</h1>\n                            <p>\n                                전문가들의 입찰을 기다려주세요!\n                            </p>\n                        </span>\n                        <Button variant=\"contained\" onClick={handleReset}>돌아가기</Button>\n                    </div>\n                ) : (\n                        <div>\n                            <span className={classes.instructions}>\n                                <EnrollList stepIndex={activeStep} handleEnrollData={handleEnrollData} />\n                            </span>\n                            <div style={{ marginTop: '50px' }}>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.backButton}\n                                    variant=\"contained\"\n                                >\n                                    뒤로\n                                </Button>\n                                {activeStep === steps.length - 1\n                                    ?\n                                <Button variant=\"contained\" color=\"primary\" onClick={onClickCheck}>\n                                    완료\n                                </Button>\n                                    :\n                                <Button variant=\"contained\" color=\"primary\" onClick={onClickCheck}>\n                                    다음\n                                </Button>}\n                            </div>\n                        </div>\n                    )}\n            </div>\n            <EnrollDialog open={open} onClickSendRequest={onClickSendRequest} setOpen={setOpen} loading={loading} />\n            <EnrollAlert open={alertOpen} setOpen={setAlertOpen} />\n            <ConfirmDialog open={confirmOpen} setOpen={setConfirmOpen} handleNext={handleNext} />\n        </div>\n    );\n}\n\n// const EnrollStepper = () => {\n//     const history = useHistory();\n//     const classes = useStyles();\n//     const [activeStep, setActiveStep] = useState(0);\n//     const steps = getSteps();\n\n//     const handleNext = () => {\n//         setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//     };\n\n//     const handleBack = () => {\n//         setActiveStep((prevActiveStep) => prevActiveStep - 1);\n//     };\n\n//     const handleReset = () => {\n//         history.push('/list');\n//     };\n\n//     const [enrollData, setEnrollData] = useState({\n//         category: '',\n//         deadLine: '',\n//         hopeDate: '',\n//         detail: '',\n//         tags: [],\n//     })\n\n//     const { category, deadLine, detail, hopeDate } = enrollData;\n\n//     const handleEnrollData = (name, value) => {\n//         setEnrollData({\n//             ...enrollData,\n//             [name]: value\n//         })\n//     }\n\n//     const [open, setOpen] = useState(false);\n//     const [alertOpen, setAlertOpen] = useState(false);\n\n//     const onClickCheck = () => {\n//         if (category === '' || deadLine === '' || detail === '' || hopeDate === undefined) {\n//             setAlertOpen(true);\n//         } else {\n//             setOpen(true);\n//         }\n//     }\n\n//     const user_id = useSelector(state => state.userAction.user_id);\n\n//     const [loading, setLoading] = useState(false);\n\n//     const sendRequest = () => {\n//         setLoading(true);\n//         Axios.post('/request',{\n//             author : user_id,\n//             ...enrollData,\n//         })\n//         .then(res=>{\n//             alert(res.data);\n//             setOpen(false);\n//             handleNext();\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     return (\n//         <div className={classes.root}>\n//             <Stepper className={classes.root} activeStep={activeStep} alternativeLabel>\n//                 {steps.map((label) => (\n//                     <Step key={label}>\n//                         <StepLabel>{label}</StepLabel>\n//                     </Step>\n//                 ))}\n//             </Stepper>\n//             <div>\n//                 {activeStep === steps.length ? (\n//                     <div>\n//                         <span className={classes.instructions}>\n//                             <h1>작성완료</h1>\n//                             <p>\n//                                 전문가들의 입찰을 기다려주세요!\n//                             </p>\n//                         </span>\n//                         <Button variant=\"contained\" onClick={handleReset}>돌아가기</Button>\n//                     </div>\n//                 ) : (\n//                         <div>\n//                             <span className={classes.instructions}>\n//                                 <EnrollList stepIndex={activeStep} handleEnrollData={handleEnrollData} />\n//                             </span>\n//                             <div style={{ marginTop: '50px' }}>\n//                                 <Button\n//                                     disabled={activeStep === 0}\n//                                     onClick={handleBack}\n//                                     className={classes.backButton}\n//                                     variant=\"contained\"\n//                                 >\n//                                     뒤로\n//                                 </Button>\n//                                 {activeStep === steps.length - 1\n//                                     ?\n//                                     <Button variant=\"contained\" color=\"primary\" onClick={onClickCheck}>\n//                                         완료\n//                                 </Button>\n//                                     :\n//                                     <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n//                                         다음\n//                                 </Button>}\n//                             </div>\n//                         </div>\n//                     )}\n//             </div>\n//             <EnrollDialog open={open} onClickSendRequest={sendRequest} setOpen={setOpen} loading={loading} />\n//             <EnrollAlert open={alertOpen} setOpen={setAlertOpen} />\n//         </div>\n//     );\n// }\n\nexport default EnrollStepper;\n","import React, { useEffect } from 'react';\nimport Stepper from './EnrollStepper';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n        color : 'rgb(104,104,106)',\n    },\n}));\n\nfunction Enroll(){\n\n    // const is_login = useSelector(state => state.userAction.is_login);\n    const is_login = localStorage.getItem('is_login');\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(()=>{\n        if(!is_login){\n            alert('로그인이 필요합니다.');\n            history.push('/login');\n        }\n    },[is_login,history])\n\n    return(\n        <Container className={classes.heroContent}>\n            <Stepper/>\n        </Container>\n    )\n}\n\nexport default Enroll;\n","import Enroll from './Enroll';\n\nexport default Enroll;","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Grid, DialogContent, DialogActions, GridList, GridListTile, TextField, IconButton, GridListTileBar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { blue } from '@material-ui/core/colors';\nimport { EXPERT_REGISTER } from '../../lib/queries';\nimport { useMutation } from '@apollo/client';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from \"react-dropzone\";\nimport ProfileCarousel from '../../components/Profile/ProfileCarousel';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Axios from 'axios';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[700],\n    },\n    buttonStyle: {\n        width: '100%'\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    avatarBig: {\n        backgroundColor: blue[100],\n        color: blue[700],\n        width: '150px',\n        height: '150px',\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n            'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n        color: 'white',\n    },\n    inputStyle: {\n        width: '50px',\n        height: '20px',\n    }\n}));\n\nfunction getSteps() {\n    return ['휴대전화 인증', '프로필 사진 등록', '프로젝트 사진 등록', '소개 및 설명'];\n}\n\n\nconst ExpertRegister = ({ onClose, open, user_id }) => {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n\n    const classes = useStyles();\n\n    const handleClose = () => {\n        onClose();\n    }\n\n    const [imageOpen, setImageOpen] = useState(false);\n\n    const [image, setImage] = useState('');\n\n    const onClickImageOpen = (src) => {\n        setImage(src);\n        setImageOpen(true);\n    }\n\n    const [profileImage, setProfileImage] = useState('');\n\n    const [profilePreview, setProfilePreview] = useState('');\n\n    const [exampleImages, setExampleImages] = useState([]);\n\n    const [examplePreview, setExamplePreview] = useState([]);\n\n    const [exPreview, setExPreview] = useState([]);\n\n    const [text, setText] = useState('');\n\n    const [phone, setPhone] = useState('');\n\n    const [phoneInput, setPhoneInput] = useState({\n        phone1: '',\n        phone2: '',\n        phone3: '',\n    });\n\n    const [register, { loading, data,error }] = useMutation(EXPERT_REGISTER)\n\n    const onChangeText = (e) => {\n        setText(e.target.value);\n    }\n\n    const onChangePhone = (e) => {\n        setPhoneInput({\n            ...phoneInput,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    const handleExpertRegister = () => {\n        register({\n            variables: {\n                user: {\n                    _id: user_id,\n                    is_seller: true,\n                },\n                profile: {\n                    phone: phone,\n                    text: text,\n                }\n            }\n        });\n        onClickAxios();\n    }\n\n    const onClickAxios = async () => {\n        let formData = new FormData(); //객체\n        const config = { //config 객체\n            header: { \"content-type\": \"multipart/form-data\" },\n        };\n        formData.append('user', user_id);\n        if (profileImage) {\n            formData.append(\"profileImage\", profileImage);\n        } else {\n            formData.append(\"profilePreview\", profilePreview);\n        }\n\n        if (exPreview) {\n            exPreview.map((obj) => {\n                formData.append(\"exPreview\", obj);\n            })\n        }\n        if (exampleImages) {\n            exampleImages.map((obj) => {\n                formData.append(\"exampleImages\", obj);\n            })\n        }\n        Axios.post('http://localhost:4000/image', formData, config)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.log('rest 에러!',err);\n            })\n    }\n\n    const onChnageProfileImage = (e) => {\n        setProfileImage(e.target.files[0]);\n        let files = e.target.files\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            setProfilePreview(e.target.result)\n        }\n        if (files.length !== 0) {\n            console.log(files);\n            reader.readAsDataURL(files[0])\n        }\n    }\n\n    const imageRead = (obj) => {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            setExamplePreview((examplePreview) => {\n                return [\n                    ...examplePreview,\n                    {\n                        src: e.target.result,\n                        obj: obj,\n                    }\n                ]\n            })\n        }\n        reader.readAsDataURL(obj);\n    }\n\n    const onChangeImage = (e) => {\n        const files = e.target.files\n        const filesLength = files.length;\n        // setExampleImages(files);\n        for (let i = 0; i < filesLength; i++) {\n            setExampleImages((exampleImages) => {\n                return [...exampleImages, files[i]]\n            });\n            imageRead(files[i]);\n        }\n        console.log(exampleImages);\n    }\n\n    const onClickDeleteImage = (obj) => {\n        setExampleImages(exampleImages.filter((x) => {\n            return obj !== x;\n        }))\n        setExamplePreview(examplePreview.filter((x) => {\n            return obj !== x.obj;\n        }))\n    }\n\n    const onClicDeleteExPreview = (ex) => {\n        setExPreview(exPreview.filter((x) => {\n            return ex !== x;\n        }))\n        console.log(exPreview);\n    }\n\n    const showExamplePreview = examplePreview.map((obj, index) => {\n        return (\n            <GridListTile key={index} >\n                <img src={obj.src} onClick={() => { onClickImageOpen(obj.src) }} />\n                <GridListTileBar\n                    titlePosition=\"bottom\"\n                    actionIcon={\n                        <IconButton className={classes.icon} onClick={() => { onClickDeleteImage(obj.obj) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    actionPosition=\"right\"\n                    className={classes.titleBar}\n                />\n            </GridListTile>\n        )\n    })\n\n    const showExPreview = exPreview.map((obj, index) => {\n        return (\n            <GridListTile key={index} >\n                <img src={obj} onClick={() => { onClickImageOpen(obj) }} />\n                <GridListTileBar\n                    titlePosition=\"bottom\"\n                    actionIcon={\n                        <IconButton className={classes.icon} onClick={() => { onClicDeleteExPreview(obj) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    actionPosition=\"right\"\n                    className={classes.titleBar}\n                />\n            </GridListTile>\n        )\n    })\n\n\n    useEffect(() => {\n        if (data) {\n            if (data.expertRegister) {\n                alert('등록 완료!');\n                handleClose();\n            } else {\n                alert('등록 실패! 다시 시도해 주세요.')\n            }\n        }\n        if(error){\n            console.log('graphql에러!',error);\n        }\n    }, [data,error])\n\n    useEffect(() => {\n        if (phoneInput.phone1 || phoneInput.phone2 || phoneInput.phone3) {\n            setPhone(`${phoneInput.phone1}-${phoneInput.phone2}-${phoneInput.phone3}`);\n        }\n    }, [phoneInput])\n\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return (\n                    <>\n                        <small>구매자와 연락을 할 수 있도록 휴대전화 번호를 적어주세요.</small><br /><br />\n                        <input className={classes.inputStyle} name=\"phone1\" onChange={onChangePhone} />\n                        -\n                        <input className={classes.inputStyle} name=\"phone2\" onChange={onChangePhone} />\n                        -\n                        <input className={classes.inputStyle} name=\"phone3\" onChange={onChangePhone} />\n                        <br /><br />\n                    </>\n                )\n            case 1:\n                return (\n                    <>\n                        <small>나를 나타내는 사진을 올려주세요.</small>\n                        <br /><br />\n                        <label htmlFor='imageupload' style={{ display: 'inline-block' }}>\n                            {profilePreview === ''\n                                ?\n                                <Avatar className={classes.avatarBig}>\n                                    <PersonIcon style={{ fontSize: 80 }} />\n                                </Avatar>\n                                :\n                                <Avatar className={classes.avatarBig} src={profilePreview} />\n                            }\n                            <input type='file' id='imageupload' onChange={onChnageProfileImage} accept=\"image/*\" style={{ display: 'none' }} />\n                        </label>\n                        <br /><br />\n                    </>\n                )\n            case 2:\n                return (\n                    <>\n                        <small>자신이 완성한 프로젝트 사진을 올려주세요. 구매자의 선택에 도움이 됩니다.</small><br />\n                        <input type=\"file\" onChange={onChangeImage} multiple accept=\"image/*\" />\n                        <div className={classes.root}>\n                            <GridList className={classes.gridList} cols={2.5}>\n                                {showExPreview}\n                                {showExamplePreview}\n                            </GridList>\n                        </div>\n                        <br />\n                    </>\n                )\n            case 3:\n                return (\n                    <>\n                        <small>자기 소개나 사진에 대한 설명을 적어주세요.</small><br />\n                        <TextField\n                            multiline\n                            defaultValue={text}\n                            variant=\"outlined\"\n                            onChange={onChangeText}\n                            style={{ width: \"100%\" }}\n                        />\n                    </>\n                )\n            default:\n                return 'Unknown step';\n        }\n    }\n\n\n    return (\n        <>\n            {loading\n                ?\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                :\n                <Dialog fullWidth={true} maxWidth=\"sm\" onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open}>\n                    <DialogTitle style={{ padding: '0px' }}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <div style={{ marginLeft: '14px', marginTop: '10px' }}>전문가 등록하기</div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <IconButton onClick={onClose} style={{ float: 'right' }}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </DialogTitle>\n                    <DialogContent>\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\n                            {steps.map((label, index) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                    <StepContent>\n                                        <Typography>{getStepContent(index)}</Typography>\n                                        <div className={classes.actionsContainer}>\n                                            <div>\n                                                <Button\n                                                    disabled={activeStep === 0}\n                                                    onClick={handleBack}\n                                                    className={classes.button}\n                                                >\n                                                    뒤로\n                                                </Button>\n                                                {activeStep === steps.length - 1\n                                                    ?\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={handleNext}\n                                                        className={classes.button}\n                                                    >\n                                                        완료\n                                                </Button>\n                                                    :\n                                                <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={handleNext}\n                                                        className={classes.button}\n                                                    >\n                                                        다음\n                                                </Button>\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </StepContent>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    </DialogContent>\n                    {activeStep === steps.length && (\n                        <Paper square elevation={0} className={classes.resetContainer}>\n                            <Typography>이러쿵 저러쿵</Typography>\n                            <Button variant=\"outlined\" onClick={handleReset} className={classes.button}>\n                                처음으로\n                            </Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleExpertRegister} className={classes.button}>\n                                등록하기\n                            </Button>\n                        </Paper>\n                    )}\n                    <ProfileCarousel open={imageOpen} setOpen={setImageOpen} src={image} />\n                </Dialog>\n            }\n        </>\n    )\n}\n\n\nexport default ExpertRegister;","import React,{useEffect,useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { Divider, Paper } from '@material-ui/core';\nimport Background from '../../img/background3.jpg'\nimport { Link } from 'react-router-dom';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Zoom from '@material-ui/core/Zoom';\nimport ExpertRegister from '../ExpertRegister/ExpertRegister';\n\n\nconst useStyles = makeStyles((theme) => ({\n    divStyle: {\n        backgroundImage: `url(${Background})`,\n        height: '400px',\n    },\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    containerStyle: {\n        backgroundColor: 'white',\n        padding: theme.spacing(3, 3, 3),\n        margin: '100px auto'\n    },\n    buttonStyle: {\n        float: 'right',\n        marginTop: '8px',\n        marginRight: '50px',\n    },\n    linkStyle: {\n        color: 'rgb(104,104,106)',\n        float : 'right',\n    }\n\n}));\n\nconst UserHome = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [checked, setChecked] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const onClose = () => {\n        setOpen(false);\n    }\n\n    const user_id = localStorage.getItem('user_id');\n\n    useEffect(() => {\n        setChecked(true);\n        return () => {\n            setChecked(false);\n        }\n    }, [])\n\n    return (\n        <>\n            <div className={classes.divStyle}>\n                <Container>\n                    <Grid container className={classes.heroContent}>\n                        <Grid item xs={8}>\n                            <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\n                                Try it!\n                        </Typography>\n                            <Typography variant=\"h3\" color=\"textSecondary\" paragraph>\n                                When you want to have own website,<br />\n                                Here is best solution.\n                        </Typography>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n            <Container>\n                <Grid container spacing={9}>\n                    <Grid item xs={6}>\n                    <Zoom in={checked} timeout={250}>\n                        <Paper className={classes.containerStyle} elevation={3}>\n                            <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n                                is Guest?\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"textSecondary\" paragraph>\n                                when you want to have own website,<br />\n                                here is best solution.\n                                <Button component={Link} className={classes.linkStyle} to=\"/user/enroll\">\n                                    REQUEST ENROLL<ArrowForwardIcon fontSize=\"small\" />\n                                </Button>\n                            </Typography>\n                        </Paper>\n                    </Zoom>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Zoom in={checked} timeout={500}>\n                            <Paper className={classes.containerStyle} elevation={3}>\n                                <Typography variant=\"h5\" color=\"textSecondary\" gutterBottom>\n                                    is Expert?\n                                </Typography>\n                                <Typography variant=\"h6\" color=\"textSecondary\" paragraph>\n                                    when you want to have own website,<br/>\n                                    here is best solution.\n                                    <Button onClick={()=>{setOpen(true)}} className={classes.linkStyle}>\n                                        EXPERT Register<ArrowForwardIcon fontSize=\"small\" />\n                                    </Button>\n                                </Typography>\n                            </Paper>\n                        </Zoom>\n                    </Grid>\n                </Grid>\n            </Container>\n            <ExpertRegister onClose={onClose} open={open} user_id={user_id}/>\n        </>\n    );\n}\n\nexport default UserHome;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Container, Grid, Divider, Chip, Typography, Paper, CardHeader, makeStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Counter from '../../../../components/Counter'\n\nconst useStyles = makeStyles((theme)=>({\n    cardStyle : {\n        textAlign: 'center',\n        transition: 'all 0.2s',\n        '&:hover' : {\n            backgroundColor : '#EAECEE'\n        }\n    },\n    gridStyle : {\n        margin: 'auto',\n    },\n    linkStyle : {\n        textDecoration: 'none'\n    }\n}));\n\nconst MyRequests = ({ data }) => {\n\n\n\n    const classes = useStyles();\n\n    const requestList = data.filter((obj) => {\n        return (obj.state === '요청 진행중') || (obj.state === '거래 진행중') || (obj.state === '요청 시간 마감');\n    })\n\n    const MyRequestList = requestList.map((obj) => {\n\n        const showTagList = obj.tags.map((obj, index) => {\n            return <Chip key={index} style={{ margin: '2px' }} label={obj} variant=\"outlined\" size=\"small\" />\n        })\n\n        return (\n            <Grid className={classes.gridStyle} key={obj._id} item xs={4}>\n                <Link className={classes.linkStyle} to={{ pathname: `/user/detail`, state: obj }}>\n                    <Card className={classes.cardStyle} size=\"large\" color=\"primary\">\n                        <CardHeader title={obj.category} subheader={obj.requestedAt} />\n                        <CardContent>\n                            {showTagList}\n                            <br /><br />\n                            {obj.state === '요청 진행중' ? <Counter data={obj} /> : <>{obj.state}</>}\n                        </CardContent>\n                    </Card>\n                </Link>\n            </Grid>\n        )\n    })\n    return (\n        <Container>\n            {requestList.length === 0\n                ?\n                <Typography variant=\"h5\" gutterBottom align=\"center\">현재 진행중인 요청이 없습니다.</Typography>\n                :\n                <Grid container spacing={4}>\n                    {MyRequestList}\n                </Grid>\n            }\n        </Container>\n    )\n}\n\nexport default MyRequests\n","import React from 'react'\nimport { Link  } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst RequestHistory = ({data}) => {\n\n    const requestHistory = data.map((obj) => {\n        return (\n            <TableRow key={obj._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                    {obj.category}\n                </TableCell>\n                <TableCell align=\"center\">{obj.requestedAt}</TableCell>\n                <TableCell align=\"center\">{obj.state}</TableCell>\n                <TableCell align=\"center\"><Link to={{ pathname: `/user/detail`, state: obj }}>상세보기</Link></TableCell>\n            </TableRow>\n        )\n    })\n\n    return (\n        <Paper elevation={3}>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>카테고리</TableCell>\n                            <TableCell align=\"center\">요청일</TableCell>\n                            <TableCell align=\"center\">상태</TableCell>\n                            <TableCell align=\"center\"></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {requestHistory}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n    )\n}\n\nexport default RequestHistory;\n","import Main from './Main';\n\nexport default Main;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress, Divider,Typography} from '@material-ui/core';\nimport { GET_MY_REQUESTS } from '../../../../lib/queries';\nimport { useQuery } from '@apollo/client';\nimport MyRequests from './MyRequests';\nimport RequestHistory from './RequestHistory';\n\n\n\nconst Main = () => {\n\n    const user_id = useSelector(state => state.userAction.user_id);\n\n    const loadingStyle = {\n        display: 'block',\n        margin: '18% auto',\n    }\n\n    const history = useHistory();\n\n    const { loading, data, error } = useQuery(GET_MY_REQUESTS, {\n        variables: { author: user_id },\n        fetchPolicy: 'cache-and-network',\n    }\n    )\n\n    if (error) {\n        alert(error);\n        history.push('/');\n        return (\n            <CircularProgress style={loadingStyle} />\n        )\n    }\n\n    if (loading) {\n        return (\n            <CircularProgress style={loadingStyle} />\n        )\n    } \n        return (\n            <div style={{padding : '10px'}}>\n                <Typography variant=\"h5\" gutterBottom>나의 요청</Typography>\n                <MyRequests data={data.getMyRequests}/>\n                <Divider style={{ marginTop: '30px' }} />\n                <br/>\n                <Typography variant=\"h5\" gutterBottom>요청 내역</Typography>\n                <RequestHistory data={data.getMyRequests}/>\n            </div>\n        )\n\n}\n\n// const Main = () => {\n\n//     const user_id = useSelector(state => state.userAction.user_id);\n\n//     const loadingStyle = {\n//         display: 'block',\n//         margin: '18% auto',\n//     }\n\n//     const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     const getMyRequests = () => {\n//         axios.get('/my-request',{\n//             author: user_id\n//         })\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(false);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     useEffect(() => {\n//         getMyRequests();\n//     }, [])\n\n//     if (loading) {\n//         return (\n//             <CircularProgress style={loadingStyle} />\n//         )\n//     } \n//         return (\n//             <div>\n//                 <h2>나의 요청</h2>\n//                 <MyRequests data={data}/>\n//                 <Divider style={{ marginTop: '30px' }} />\n//                 <h2>요청 내역</h2>\n//                 <RequestHistory data={data}/>\n//             </div>\n//         )\n\n// }\n\nexport default Main;","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\n\n\nconst PopOver = ({ setNumberOpen, setChatOpen, open, anchorEl, handleClose }) => {\n\n\n  const chatStart = () => {\n    setChatOpen(true);\n    handleClose();\n  }\n\n  const numberShow = () => {\n    setNumberOpen(true);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        <List>\n          <ListItem\n            button\n            onClick={chatStart}>\n            <ListItemText primary=\"1:1 채팅\" />\n          </ListItem>\n          <ListItem\n            button\n            onClick={numberShow}>\n            <ListItemText primary=\"전화,문자메세지\" />\n          </ListItem>\n        </List>\n      </Popover>\n    </div>\n  )\n}\n\nexport default PopOver\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\n\nconst PhoneNumber = ({open,onClose,phone}) => {\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <SmartphoneIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={`전화번호 : ${phone}`}/>\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}\n\nexport default PhoneNumber;\n","import CommunicateButton from './CommunicateButton';\n\nexport default CommunicateButton;","import React, { useState, useEffect } from 'react'\nimport { Button } from '@material-ui/core';\nimport PopOver from './PopOver';\nimport UserChat from '../chat';\nimport PhoneNumber from './PhoneNumber';\n\nconst CommunicateButton = ({request_id,seller_id,phone}) => {\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    const [chatOpen,setChatOpen] = useState(false);\n\n    const handleChatClose = () => {\n        setChatOpen(false);\n    }\n\n    const [numberOpen, setNumberOpen] = useState(false);\n\n    const handleNumberClose = () => {\n        setNumberOpen(false);\n    }\n\n    return (\n        <>\n        <Button onClick={handleClick} style={{ width: '100%'}} variant=\"outlined\">\n            상담하기\n        </Button>\n        <PopOver setNumberOpen={setNumberOpen} setChatOpen={setChatOpen} open={open} anchorEl={anchorEl} handleClose={handleClose}/>\n        {chatOpen && <UserChat open={chatOpen} onClose={handleChatClose} request={request_id} seller={seller_id}/>}\n        <PhoneNumber open={numberOpen} onClose={handleNumberClose} phone={phone}/>\n        </>\n    )\n}\n\nexport default CommunicateButton;\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport Avatar from '@material-ui/core/Avatar';\nimport ProfileModal from './Profile/ProfileModal';\nimport UserCommuButton from './UserCommuButton';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        textDecoration: 'none',\n        maxWidth: '430px',\n        maxHeight: '135px',\n    },\n    cardHead: {\n        fontFamily: 'Montserrat, sans-serif',\n        fontWeight: 'bold',\n        fontSize: '20px',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    tagStyle: {\n        display: 'inline-block',\n        backgroundColor: '#F0F0F0',\n        borderRadius: '3px',\n        padding: '2px 5px',\n        margin: '5px',\n        fontWeight: 'bold',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n    scorllStyle: {\n        width: '100%',\n        height: '445px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        margin: 'auto 0px',\n        padding: '0px',\n    },\n}));\n\nconst BidCard = ({ data, requestData, onClickChoice }) => {\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [user_id, setUser_id] = useState('');\n\n    const handleClickOpen = (id, name) => {\n        console.log(id, name, data);\n        setOpen(true);\n        setUser_id(id);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <Card size=\"large\" color=\"primary\" variant=\"outlined\" className={classes.card}>\n            <CardContent className={classes.cardContent}>\n                <Grid container>\n                    <Grid item xs={4}>\n                        {data.author.profile.profileImage \n                            ?\n                            <Avatar onClick={() => { handleClickOpen(data.author._id, data.author.name) }} src={data.author.profile.profileImage} className={classes.large} />\n                            :\n                            <Avatar onClick={() => { handleClickOpen(data.author._id, data.author.name) }} className={classes.large}>\n                                <PersonIcon style={{ fontSize: 100 }} />\n                            </Avatar>\n                        }\n                    </Grid>\n                    <Grid item xs={4} style={{ margin: 'auto' }} >\n                        <Typography component=\"legend\" >\n                            {data.author.name}\n                        </Typography>\n                        <Rating name=\"half-rating-read\" value={1} precision={0.5} readOnly />\n                        <br />\n                        {data.price}원\n                    </Grid>\n                    <Grid item xs={4} style={{ margin: 'auto' }}>\n                        <UserCommuButton request_id={requestData._id} seller_id={data.author._id} phone={data.author.profile.phone} />\n                        <Button onClick={() => { onClickChoice(data._id) }} style={{ width: '100%' }} variant=\"outlined\">\n                            의뢰하기\n                        </Button>\n                    </Grid>\n                </Grid>\n                <ProfileModal open={open} onClose={handleClose} user_id={user_id} />\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default BidCard;","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button, Container, Grid, Typography, Avatar, List, ListItem, ListItemText, Divider } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { useMutation } from '@apollo/client';\nimport { TRADE_CANCLE, TRADE_COMPLETE } from '../../../../lib/queries';\nimport UserCommuButton from '../../../../components/UserCommuButton';\nimport RequestCard from '../../../../components/RequestCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BidCard from '../../../../components/BidCard';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        color: 'rgb(104,104,106)'\n    },\n    gridStyle: {\n        margin: '4% auto',\n        width: \"80%\",\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '4% auto',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n}));\n\nconst NowTrading = ({ data, requestData }) => {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n    \n\n    const [tradeCancle, { data: cancle }] = useMutation(TRADE_CANCLE, {\n        variables: {\n            request: requestData._id,\n        }\n    })\n\n    const [tradeComplete, { data: complete }] = useMutation(TRADE_COMPLETE, {\n        variables: {\n            bid: data._id,\n            request: requestData._id,\n        }\n    })\n\n    useEffect(() => {\n        console.log('data', data);\n        console.log('requestData', requestData);\n        if (complete) {\n            alert(complete.tradeComplete);\n            history.replace('/user/mypage');\n        }\n        if (cancle) {\n            alert(cancle.tradeCancle);\n            history.replace('/user/mypage');\n        }\n    }, [complete, cancle])\n\n\n\n    return (\n        <Container className={classes.root}>\n            <Grid className={classes.gridStyle} container spacing={9}>\n                <Grid item xs={6}>\n                    <RequestCard obj={requestData} />\n                </Grid>\n                <Grid item xs={6}>\n                    <Grid container spacing={6}>\n                        <Grid item xs={3}>\n                        {data.author.profile.profileImage \n                            ?\n                            <Avatar src={data.author.profile.profileImage} className={classes.large} />\n                            :\n                            <Avatar className={classes.large}>\n                                <PersonIcon style={{ fontSize: 100 }} />\n                            </Avatar>\n                        }\n                        </Grid>\n                        <Grid item xs={6} style={{ marginTop: '8px' }}>\n                            <Typography variant=\"h6\">\n                                {data.author.name}\n                            </Typography>\n                            <Rating name=\"half-rating-read\" value={1} precision={0.5} readOnly />\n                            <Typography>3.5/5.0</Typography>\n                        </Grid>\n                    </Grid>\n                    <List>\n                        <ListItem>\n                            <ListItemText primary={`₩${data.price}`} primaryTypographyProps={{ variant: \"h5\" }} />\n                        </ListItem>\n                        <ListItem>\n                            <NavigateNextIcon fontSize=\"small\" />&nbsp;&nbsp;\n                            <ListItemText primary='가격은 상호 협의를 통해 변동이 있을 수 있습니다.' />\n                        </ListItem>\n                    </List>\n                    <UserCommuButton request_id={requestData._id} seller_id={data.author._id} phone={data.author.profile.phone} />\n                    <Button onClick={tradeComplete} style={{ width: '100%' }} variant=\"outlined\">\n                        거래 완료\n                    </Button>\n                    <Button onClick={tradeCancle} style={{ width: '100%' }} variant=\"outlined\">\n                        거래 취소\n                    </Button>\n                </Grid>\n            </Grid>\n            <Divider/>\n            <Grid container className={classes.gridStyle} spacing={9}>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>안내</Typography>\n                    <ul>\n                        <li>\n                            본 웹사이트는 고객과 전문가를 연결시켜드리는 중개 플랫폼 입니다.\n                        </li>\n                        <br/>\n                        <li>\n                            사이트 운영자는 거래에 관여하지 않습니다.\n                        </li>\n                        <br/>\n                        <li>\n\n                        </li>\n                    </ul>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>교환/환불</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>평점과 리뷰</Typography>\n                    <ul>\n                        <li>\n                            평점과 리뷰는 거래 완료 고객에 한해서만 작성이 가능합니다.\n                        </li>\n                        <br/>\n                        <li>\n                            사이트 운영자는 리뷰에 관여하지 않습니다.\n                        </li>\n                        <br/>\n                        <li>\n\n                        </li>\n                    </ul>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\n// const NowTrading = ({ data, requestData }) => {\n\n//     const classes = useStyles();\n\n//     const history = useHistory();\n\n//     const data = data.filter((obj) => {\n//         return obj.state === '거래 진행중';\n//     })\n\n//     const tradeCancle = () => {\n//         Axios.post('/cancle',{\n//             request: requestData._id,\n//         })\n//         .then(res=>{\n//             alert(res.data);\n//             history.replace('/user/mypage');\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     const tradeComplete = () => {\n//         Axios.post('/complete',{\n//             bid: data[0]._id,\n//             request: requestData._id,\n//         })\n//         .then(res=>{\n//             alert(res.data);\n//             history.replace('/user/mypage');\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     return (\n//         <Container>\n//             <Grid className={classes.gridStyle} container spacing={9}>\n//                 <Grid item xs={6}>\n//                     <RequestCard obj={requestData} />\n//                 </Grid>\n//                 <Grid item xs={6}>\n//                     <h2>판매자</h2>\n//                     <BidCard data={data[0]} requestData={requestData}/>\n//                     <UserCommuButton request_id={requestData._id} seller_id={data[0].author._id} phone={data[0].author.profile.phone} />\n//                     <Button onClick={tradeComplete} style={{ width: '100%' }} variant=\"outlined\">\n//                         거래 완료\n//                     </Button>\n//                     <Button onClick={tradeCancle} style={{ width: '100%' }} variant=\"outlined\">\n//                         거래 취소\n//                     </Button>\n//                 </Grid>\n//             </Grid>\n\n//         </Container>\n//     )\n// }\n\nexport default NowTrading\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport Avatar from '@material-ui/core/Avatar';\nimport ProfileModal from '../../../../components/Profile/ProfileModal';\nimport UserCommuButton from '../../../../components/UserCommuButton';\nimport BidCard from '../../../../components/BidCard';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        textDecoration: 'none',\n        maxWidth: '430px',\n        maxHeight: '135px',\n    },\n    cardHead: {\n        fontFamily: 'Montserrat, sans-serif',\n        fontWeight: 'bold',\n        fontSize: '20px',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    tagStyle: {\n        display: 'inline-block',\n        backgroundColor: '#F0F0F0',\n        borderRadius: '3px',\n        padding: '2px 5px',\n        margin: '5px',\n        fontWeight: 'bold',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n    scorllStyle : {\n        width: '100%',\n        height: '445px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        margin: 'auto 0px',\n        padding: '0px',\n    },\n}));\n\nconst Bids = ({data,requestData,onClickChoice}) => {\n\n    const classes = useStyles();\n\n    // const bids = data.map((obj) => {\n    //     return (\n    //         <Card key={obj._id} size=\"large\" color=\"primary\" variant=\"outlined\" className={classes.card}>\n    //             <CardContent className={classes.cardContent}>\n    //                 <Grid container>\n    //                     <Grid item xs={4}>\n    //                         <Avatar onClick={()=>{handleClickOpen(obj.author._id,obj.author.name)}} src=\"https://placeimg.com/100/100/animals\" className={classes.large} />\n    //                     </Grid>\n    //                     <Grid item xs={4} style={{ margin: 'auto' }} >\n    //                         <Typography component=\"legend\">\n    //                             {obj.author.name}\n    //                         </Typography>\n    //                         <Rating name=\"half-rating-read\" value={1} precision={0.5} readOnly />\n    //                         <br />\n    //                         {obj.price}원\n    //                         </Grid>\n    //                     <Grid item xs={4} style={{ margin: 'auto' }}>\n    //                         <UserCommuButton request_id={requestData._id} seller_id={obj.author._id}/>\n    //                         <Button onClick={() => { onClickChoice(obj._id) }} style={{ width: '100%' }} variant=\"outlined\">\n    //                             의뢰하기\n    //                         </Button>\n    //                     </Grid>\n    //                 </Grid>\n    //             </CardContent>\n    //         </Card>\n    //     )\n    // })\n\n    const bids = data.map((obj) => {\n        return (\n            <BidCard key={obj._id} data={obj} requestData={requestData} onClickChoice={onClickChoice}/>\n        )\n    })\n\n    return (\n        <div className={classes.scorllStyle}>\n            {data.length > 0 ? <>{bids}</> : <Typography variant=\"h6\">현재까지 도착한 견적이 없습니다.</Typography>}\n        </div>\n    )\n}\n\nexport default Bids;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Divider, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport RequestCard from '../../../../components/RequestCard';\nimport Bids from './Bids';\nimport { useMutation } from '@apollo/client';\nimport { TRADE_CANCLE } from '../../../../lib/queries';\nimport { useHistory } from 'react-router-dom';\nimport Counter from '../../../../components/Counter';\nimport Axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        color: 'rgb(104,104,106)'\n    },\n    gridStyle: {\n        margin: '4% auto',\n        width: \"80%\",\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '4% auto',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n    buttonStyle: {\n        width: '100%',\n    },\n    counterStyle: {\n        textAlign: 'center',\n        margin: '8px',\n    },\n}));\n\nconst ReceiveList = ({ requestData, bidData, onClickChoice, }) => {\n\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    const [tradeCancle, { data: cancle }] = useMutation(TRADE_CANCLE, {\n        variables: {\n            request: requestData._id,\n        }\n    })\n\n    useEffect(() => {\n        if (cancle) {\n            alert(cancle.tradeCancle);\n            history.replace('/user/mypage');\n        }\n    }, [cancle])\n\n    return (\n        <Container className={classes.root}>\n            <Grid className={classes.gridStyle} container spacing={6}>\n                <Grid item xs={6}>\n                    <RequestCard obj={requestData} />\n                    <Typography variant=\"h6\" className={classes.counterStyle}><Counter data={requestData} /></Typography>\n                    <Button onClick={tradeCancle} className={classes.buttonStyle} variant=\"outlined\">\n                        거래 취소\n                    </Button>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"h5\">받은 견적</Typography>\n                    <br />\n                    <Bids onClickChoice={onClickChoice} data={bidData} requestData={requestData} />\n                </Grid>\n            </Grid>\n            <Divider/>\n            <Grid container className={classes.gridStyle} spacing={9}>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>안내</Typography>\n                    <ul>\n                        <li>\n                            본 웹사이트는 고객과 전문가를 연결시켜드리는 중개 플랫폼 입니다.\n                        </li>\n                        <br />\n                        <li>\n                            사이트 운영자는 거래에 관여하지 않습니다.\n                        </li>\n                        <br />\n                        <li>\n\n                        </li>\n                    </ul>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>교환/환불</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography align=\"center\" variant=\"h5\" gutterBottom>평점과 리뷰</Typography>\n                    <ul>\n                        <li>\n                            평점과 리뷰는 거래 완료 고객에 한해서만 작성이 가능합니다.\n                        </li>\n                        <br />\n                        <li>\n                            사이트 운영자는 거래에 관여하지 않습니다.\n                        </li>\n                        <br />\n                        <li>\n\n                        </li>\n                    </ul>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\n// const ReceiveList = ({ requestData, bidData, onClickChoice, }) => {\n\n//     const history = useHistory();\n\n//     const classes = useStyles();\n\n//     const tradeCancle = () => {\n//         Axios.post('/cancle',{\n//             request : requestData._id,\n//         })\n//         .then(res=>{\n//             alert(res.data);\n//             history.replace('/user/mypage');\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     return (\n//         <Container>\n//             <Grid className={classes.gridContainerStyle} container spacing={6}>\n//                 <Grid item xs={5}>\n//                     <RequestCard obj={requestData} />\n//                     <Typography variant=\"5\" style={{textAlign:'center'}}><Counter data={requestData}/></Typography variant=\"5\">\n//                     <Button onClick={tradeCancle} className={classes.buttonStyle} variant=\"outlined\">\n//                         거래 취소\n//                     </Button>\n//                 </Grid>\n//                 <Grid item xs={7}>\n//                     <Typography variant=\"5\">받은 견적</Typography variant=\"5\">\n//                     <Bids onClickChoice={onClickChoice} data={bidData} requestData={requestData} />\n//                 </Grid>\n//             </Grid>\n//         </Container>\n//     )\n// }\n\nexport default ReceiveList\n","import React from 'react'\nimport RequestCard from '../../../../components/RequestCard'\nimport { Container, Grid, Typography, Divider, makeStyles, Avatar, Button } from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        color: 'rgb(104,104,106)'\n    },\n    gridStyle: {\n        margin: '4% auto',\n        width: \"80%\",\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '4% auto',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n    icon: {\n        display: 'block',\n        fontSize: 50,\n        marginTop: '80px',\n        margin: 'auto',\n        color: \"#4caf50\",\n    }\n}));\n\nconst TradeCompelete = ({ data, requestData }) => {\n\n    const classes = useStyles();\n    return (\n        <Container className={classes.root}>\n            <Grid className={classes.gridStyle} container spacing={9}>\n                <Grid item xs={6}>\n                    <RequestCard obj={requestData} />\n                </Grid>\n                <Grid item xs={6}>\n                    <CheckCircleIcon className={classes.icon} />\n                    <br />\n                    <Typography align=\"center\" variant=\"h4\" paragraph>\n                        거래 완료!\n                    </Typography>\n                    <br />\n                    <Typography variant=\"h5\" paragraph>\n                        전문가\n                    </Typography>\n                    <Grid container spacing={6}>\n                        <Grid item xs={3}>\n                            {data.author.profile.profileImage\n                                ?\n                                <Avatar src={data.author.profile.profileImage} className={classes.large} />\n                                :\n                                <Avatar className={classes.large}>\n                                    <PersonIcon style={{ fontSize: 100 }} />\n                                </Avatar>\n                            }\n                        </Grid>\n                        <Grid item xs={6} style={{ marginTop: '8px' }}>\n                            <Typography variant=\"h6\">\n                                {data.author.name}\n                            </Typography>\n                            <Rating name=\"half-rating-read\" value={1} precision={0.5} readOnly />\n                            <Typography>3.5/5.0</Typography>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Typography style={{ display: 'flex', alignItems: 'center' }}>\n                        거래는 만족스러우셨나요? &nbsp;&nbsp;&nbsp;\n                            <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"small\"\n                            className={classes.button}\n                            endIcon={<EditIcon />}\n                        >\n                            후기 작성하기\n                        </Button>\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default TradeCompelete\n","import React from 'react'\nimport RequestCard from '../../../../components/RequestCard'\nimport { Container, Grid, Typography, Divider, makeStyles, Avatar } from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        color: 'rgb(104,104,106)'\n    },\n    gridStyle: {\n        margin: '4% auto',\n        width: \"80%\",\n    },\n    icon: {\n        display: 'block',\n        fontSize: 50,\n        marginTop : '80px',\n        margin: 'auto',\n    }\n}));\n\nconst CanceledTrade = ({ data, requestData }) => {\n    const classes = useStyles();\n    return (\n        <Container className={classes.root}>\n            <Grid className={classes.gridStyle} container spacing={7}>\n                <Grid item xs={6}>\n                    <RequestCard obj={requestData} />\n                </Grid>\n                <Grid item xs={6}>\n                    <br />\n                    <CancelIcon className={classes.icon} color=\"error\" />\n                    <br />\n                    <Typography align=\"center\" variant=\"h5\" paragraph>\n                        취소되었습니다.\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default CanceledTrade;","import React, { useEffect, useState } from 'react'\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_BIDS_IN_REQUEST, CHOICE_ONE_BID } from '../../../../lib/queries';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport NowTrading from './NowTrading';\nimport ReceiveList from './ReceiveList';\nimport Axios from 'axios';\nimport RequestCard from '../../../../components/RequestCard';\nimport { Container } from '@material-ui/core';\nimport TradeCompelete from './TradeCompelete';\nimport CanceledTrade from './CanceledTrade';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        textDecoration: 'none',\n        maxWidth: '430px',\n        maxHeight: '135px',\n    },\n    cardHead: {\n        fontFamily: 'Montserrat, sans-serif',\n        fontWeight: 'bold',\n        fontSize: '20px',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    tagStyle: {\n        display: 'inline-block',\n        backgroundColor: '#F0F0F0',\n        borderRadius: '3px',\n        padding: '2px 5px',\n        margin: '5px',\n        fontWeight: 'bold',\n    },\n    loadingStyle: {\n        display: 'block',\n        margin: '18% auto',\n    },\n    large: {\n        width: '100px',\n        height: '100px',\n    },\n}));\n\nconst RequestDetail = (props) => {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const [requestData] = useState(props.location.state);\n\n    const { loading, data, error } = useQuery(GET_BIDS_IN_REQUEST, {\n        variables: { request: requestData._id },\n        fetchPolicy: 'cache-and-network',\n    }\n    )\n\n    const [choiceOneBid, { data: data2 }] = useMutation(CHOICE_ONE_BID);\n\n    useEffect(() => {\n        if (data2) {\n            alert(data2.choiceOneBid);\n            history.replace('/user/mypage');\n        }\n    }, [data2])\n\n    if (loading) {\n        return (\n            <CircularProgress className={classes.loadingStyle} />\n        )\n    }\n\n    if (!loading) {\n        console.log(data);\n    }\n\n\n    const onClickChoice = (bid_id) => {\n        choiceOneBid({\n            variables: { \n                bid: bid_id,\n                request: requestData._id,\n            }\n        })\n    }\n\n\n    switch (requestData.state) {\n        case '거래 진행중':\n            const data1 = data.getBidsInRequest.filter((obj) => {\n                return obj.state === '거래 진행중';\n            })[0]\n            return <NowTrading data={data1} requestData={requestData} />\n\n        case '거래 완료':\n            const data2 = data.getBidsInRequest.filter((obj) => {\n                return obj.state === '거래 완료';\n            })[0]\n            return <TradeCompelete data={data2} requestData={requestData}/>\n        case '취소된 거래':\n            return <CanceledTrade requestData={requestData}/>\n\n        default:\n            return <ReceiveList onClickChoice={onClickChoice} bidData={data.getBidsInRequest} requestData={requestData} />\n    }\n\n\n}\n\n// const RequestDetail = (props) => {\n\n//     const classes = useStyles();\n//     const [requestData] = useState(props.location.state);\n//     const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     const getBidsInRequest = () => {\n//         Axios.get('/bid-in-request',{\n//             request : requestData._id\n//         })\n//         .then(res=>{\n//             setData(res.data);\n//             setLoading(true);\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n//     useEffect(()=>{\n//         getBidsInRequest();\n//     },[])\n\n//     const choiceOneBid = (bid_id) => {\n//         Axios.post('/one-bid',{\n//             bid: bid_id,\n//             request : requestData._id,\n//         })\n//         .then(res=>{\n//             alert(res.data)\n//         })\n//         .catch(err=>{\n//             console.log(err);\n//         })\n//     }\n\n\n//     if (loading) {\n//         return (\n//             <CircularProgress className={classes.loadingStyle} />\n//         )\n//     }\n\n//     if (!loading) {\n//         console.log(data);\n//     }\n\n//     switch (requestData.state) {\n//         case '거래 진행중':\n//             return <NowTrading data={data} requestData={requestData} />\n//         case '거래 완료':\n//             return <h1>거래 완료</h1>\n//         case '취소된 거래':\n//             return <h1>취소된 거래</h1>\n//         case '취소된 요청':\n//             return <h1>취소된 요청(요청시간이 마감되었는데 견적서가 1개도 없음)</h1>\n\n//         default:\n//             return <ReceiveList onClickChoice={choiceOneBid} bidData={data} requestData={requestData} />\n//     }\n\n\n// }\n\nexport default RequestDetail;","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport MyRequest from './MyRequest';\nimport { Grid, Container, Divider, Avatar, Typography } from '@material-ui/core';\nimport Image from 'material-ui-image';\nimport Button from '@material-ui/core/Button';\nimport RequestDetail from './MyRequest/RequestDetail';\nimport { useSelector } from 'react-redux';\nimport ProfileModal from '../../../components/Profile/ProfileModal';\nimport { GET_MY_PROFILE_IMAGE } from '../../../lib/queries';\nimport { useQuery } from '@apollo/client';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n        color: 'rgb(104,104,106)',\n\n    },\n    avatarStyle: {\n        margin: 'auto',\n        width: '180px',\n        height: '180px',\n        backgroundColor: 'rgb(104,104,106)',\n        border: 'none',\n    },\n    gridStyle: {\n        textAlign: 'center',\n        marginRight: '30px',\n    },\n    buttonStyle: {\n        width: '100%',\n        margin: '1px'\n    }\n}));\n\nconst MyPage = () => {\n    const classes = useStyles();\n    const userName = localStorage.getItem('userName');\n    const user_id = localStorage.getItem('user_id')\n    const is_seller = useSelector(state => state.userAction.is_seller);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const { data } = useQuery(GET_MY_PROFILE_IMAGE, {\n        variables: {\n            user: user_id,\n        },\n        fetchPolicy: 'cache-and-network',\n    })\n\n    return (\n        <Container className={classes.heroContent}>\n            <Grid container>\n                <Grid className={classes.gridStyle} item xs={2}>\n                    {data &&\n                        data.getMyProfile.profileImage\n                        ?\n                        <Avatar className={classes.avatarStyle} src={data.getMyProfile.profileImage} />\n                        :\n                        <Avatar className={classes.avatarStyle}>\n                            <PersonIcon style={{ fontSize: 100 }} />\n                        </Avatar>\n                    }\n                    <br />\n                    <Typography variant=\"h5\" gutterBottom>{userName}</Typography>\n                    {is_seller\n                        &&\n                        <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/seller/mypage'>\n                            판매 정보\n                    </Button>\n                    }\n                    <Button className={classes.buttonStyle} variant=\"outlined\" component={Link} to='/user/mypage'>\n                        구매 정보\n                    </Button>\n                    <Button className={classes.buttonStyle} variant=\"outlined\" onClick={handleClickOpen}>\n                        나의 프로필\n                    </Button>\n                    <br />\n                </Grid>\n                <Grid item xs={9}>\n                    <MyRequest/>\n                </Grid>\n                <ProfileModal name={userName} open={open} onClose={handleClose} user_id={user_id} />\n            </Grid>\n        </Container>\n    )\n}\n\nexport default MyPage;","import MyPage from './Mypage';\n\nexport default MyPage;","import Main from './Main';\n\nexport default Main;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Enroll from './Enroll';\nimport UserHome from './UserHome';\nimport MyPage from './MyPage';\nimport RequestDetail from './MyPage/MyRequest/RequestDetail';\nimport { Container } from '@material-ui/core';\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/user' component={UserHome} />\n            <Route path='/user/enroll' component={Enroll} />\n            <Route path='/user/mypage' component={MyPage} />\n            <Route path='/user/detail' component={RequestDetail}/>\n        </Switch>\n    )\n}\n\nexport default Main;\n","import React, { useEffect } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Login from './pages/Login';\nimport Join from './pages/Join';\nimport Seller from './pages/SellerPage';\nimport User from './pages/UserPage';\nimport { useDispatch } from 'react-redux';\nimport { Container } from '@material-ui/core';\n\n// const Seller = React.lazy(() => import('./pages/SellerPage'));\n// const User = React.lazy(() => import('./pages/UserPage'));\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const is_login = () => {\n      if (localStorage.getItem('is_login') === 'true') {\n        return true\n      } else {\n        return false\n      }\n    }\n    const is_seller = () => {\n      if (localStorage.getItem('is_seller') === 'true') {\n        return true\n      } else {\n        return false\n      }\n    }\n    const user_id = localStorage.getItem('user_id');\n    const userName = localStorage.getItem('userName');\n    if (is_login()) {\n      console.log('자동로그인!');\n      dispatch({\n        type: 'LOGIN', payload: {\n          user_id: user_id,\n          is_seller: is_seller(),\n          userName: userName,\n        }\n      });\n    }\n  }, [dispatch])\n  return (\n    <BrowserRouter>\n    <div style={{ backgroundColor: '#f9f9f9' }}>\n    <Navigation></Navigation>\n    </div>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/seller' component={Seller} />\n          <Route path='/user' component={User} />\n          <Route path='/login' component={Login} />\n          <Route path='/join' component={Join} />\n        </Switch>\n      <div style={{ backgroundColor: '#f9f9f9' }}>\n        <Footer></Footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","\nconst initailState = {\n    is_login : false,\n    user_id : '',\n    userName : '',\n    is_seller : null,\n}\n\nconst login_reducer = (state = initailState, action) => {\n    switch(action.type){\n        case 'LOGIN':\n            return {\n                is_login : true,\n                user_id : action.payload.user_id,\n                userName : action.payload.userName,\n                is_seller : action.payload.is_seller,\n            }\n        case 'LOGOUT':\n            return{\n                is_login : false,\n                user_id : '',\n                is_seller : null,\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default login_reducer;","import userAction from './userAction';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    userAction,\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { ApolloProvider, ApolloClient, InMemoryCache,HttpLink,split } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\nconst wsLink = new WebSocketLink({\n  uri : 'ws://localhost:4000',\n  options : {\n    reconnect : true\n  }\n})\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/'\n});\n\nconst link = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\n\nconst store = createStore(rootReducer);\n\ndocument.querySelector('body').style.backgroundColor = '#F2F3F4'\ndocument.querySelector('body').style.margin = '0px'\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}